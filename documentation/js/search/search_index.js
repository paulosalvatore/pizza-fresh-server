var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.29,1,2.425]],["body/controllers/AppController.html",[0,1.69,1,3.178,2,1.221,3,0.275,4,0.247,5,0.17,6,2.871,7,0.489,8,1.593,9,3.974,10,3.371,11,4.73,12,1.221,13,0.023,14,2.099,15,2.906,16,5.343,17,4.272,18,6.273,19,0.561,20,3.371,21,4.666,22,3.974,23,4.666,24,2.906,25,3.974,26,2.906,27,6.273,28,3.765,29,2.68,30,3.974,31,4.666,32,1.024,33,0.812,34,0.489,35,0.861,36,1.221,37,5.776,38,4.558,39,1.503,40,0.619,41,0.721,42,2.68,43,1.936,44,0.967,45,3.073,46,2.871,47,3.371,48,0.275,49,0.082,50,1.378,51,1.296,52,2.099,53,1.936,54,3.371,55,1.673,56,2.871,57,3.371,58,3.371,59,1.151,60,3.371,61,0.014,62,0.014]],["title/modules/AppModule.html",[63,1.216,64,2.425]],["body/modules/AppModule.html",[1,3.716,2,1.733,3,0.285,4,0.257,5,0.177,13,0.023,40,0.718,41,0.748,45,3.644,46,2.979,48,0.285,49,0.085,61,0.015,62,0.015,63,1.634,64,4.847,65,1.522,66,1.956,67,2.979,68,2.979,69,2.979,70,3.952,71,3.952,72,2.761,73,3.952,74,3.952,75,3.952,76,2.376,77,1.736,78,1.623,79,3.498,80,2.55,81,2.749,82,3.498,83,3.498,84,3.498,85,3.498,86,3.498,87,3.498,88,3.498]],["title/injectables/AppService.html",[45,2.045,89,1.021]],["body/injectables/AppService.html",[3,0.365,4,0.329,5,0.226,7,0.651,8,1.924,9,4.8,13,0.023,16,4.8,19,0.746,32,1.363,33,1.081,34,0.651,35,1.146,39,1.445,40,0.48,41,0.959,45,3.237,48,0.365,49,0.109,56,4.8,59,1.531,61,0.017,62,0.017,89,1.616,90,2.082,91,3.821,92,5.636,93,1.701,94,4.486,95,5.636,96,3.821,97,4.486,98,4.486]],["title/controllers/AuthController.html",[0,1.29,99,2.425]],["body/controllers/AuthController.html",[0,1.175,2,1.175,3,0.264,4,0.238,5,0.164,7,0.471,8,1.551,12,1.645,13,0.023,19,0.756,25,3.869,26,2.829,28,2.609,32,1.381,33,1.094,34,0.66,35,1.16,39,1.463,40,0.695,41,0.694,42,3.011,43,1.863,44,0.93,48,0.264,49,0.079,50,1.326,51,1.247,53,2.609,59,1.551,61,0.014,62,0.014,99,3.094,100,2.763,101,2.02,102,3.244,103,3.869,104,4.543,105,2.763,106,3.86,107,3.244,108,4.543,109,4.543,110,3.426,111,4.543,112,3.244,113,2.609,114,3.244,115,2.352,116,3.244,117,2.42,118,2.609,119,3.426,120,3.244,121,3.244,122,1.863,123,2.209,124,2.209,125,2.829,126,2.02,127,2.02,128,1.247,129,2.829,130,2.209,131,3.011,132,2.763,133,2.02,134,2.763,135,2.763,136,2.763,137,2.209,138,3.244,139,2.763,140,3.244,141,3.244,142,3.244,143,3.244,144,3.244,145,2.02,146,3.244,147,3.244]],["title/modules/AuthModule.html",[63,1.216,70,2.218]],["body/modules/AuthModule.html",[2,1.831,3,0.309,4,0.279,5,0.192,13,0.023,40,0.71,41,0.811,48,0.309,49,0.092,61,0.016,62,0.016,63,1.726,65,1.651,66,2.067,70,4.292,72,2.827,76,2.511,77,1.884,78,1.761,80,2.694,81,2.904,99,3.874,128,1.459,131,3.732,132,3.232,148,3.232,149,3.795,150,3.232,151,4.047,152,3.795,153,3.795,154,2.363,155,3.795,156,2.861,157,2.363,158,3.795,159,2.363,160,2.363,161,1.884,162,3.795,163,3.795,164,3.232,165,3.795,166,3.795,167,3.795]],["title/injectables/AuthService.html",[89,1.021,131,2.045]],["body/injectables/AuthService.html",[3,0.26,4,0.234,5,0.161,7,0.464,8,1.534,13,0.023,19,0.747,24,1.988,32,1.365,33,1.082,34,0.652,35,1.147,39,1.028,40,0.66,41,0.683,48,0.26,49,0.078,51,1.727,55,2.58,59,1.09,61,0.014,62,0.014,89,1.288,90,1.482,103,3.06,105,3.826,106,3.84,110,2.407,113,2.58,115,2.043,117,2.393,131,2.58,133,1.988,134,2.719,135,2.719,136,2.719,156,2.407,168,2.719,169,2.769,170,2.58,171,1.833,172,2.305,173,6.335,174,3.192,175,2.23,176,3.192,177,2.719,178,3.387,179,1.833,180,3.387,181,3.005,182,1.833,183,3.192,184,3.192,185,4.492,186,2.719,187,3.192,188,2.393,189,2.407,190,2.798,191,2.085,192,4.492,193,4.492,194,3.919,195,4.492,196,3.192,197,3.192,198,3.192,199,4.492,200,3.192,201,3.387,202,1.482,203,3.192]],["title/classes/CreateOrderDto.html",[49,0.087,204,2.218]],["body/classes/CreateOrderDto.html",[3,0.29,4,0.261,5,0.18,7,0.517,12,1.754,13,0.022,17,3.299,19,0.806,29,2.782,34,0.926,36,1.754,40,0.633,44,1.021,48,0.29,49,0.134,61,0.015,62,0.015,117,2.581,204,3.017,205,1.146,206,4.152,207,3.032,208,1.654,209,3.429,210,5.506,211,4.211,212,3.56,213,3.56,214,4.844,215,3.299,216,4.844,217,4.844,218,4.126,219,5.91,220,4.844,221,4.456,222,3.032,223,3.56,224,2.405,225,3.032,226,4.126,227,3.652,228,4.126,229,4.844,230,2.248,231,3.299,232,3.56,233,2.934,234,3.032,235,4.126,236,3.652,237,3.032,238,4.844,239,1.896,240,1.146,241,2.044,242,2.424,243,3.56,244,2.684]],["title/classes/CreateOrderProductDto.html",[49,0.087,211,2.425]],["body/classes/CreateOrderProductDto.html",[3,0.293,4,0.264,5,0.181,7,0.522,12,2.003,13,0.022,19,0.92,28,2.799,34,0.803,36,2.316,40,0.522,44,1.03,48,0.293,49,0.119,61,0.015,62,0.015,93,1.515,205,1.157,206,4.473,208,1.664,211,3.319,221,3.675,224,2.419,225,3.059,230,2.968,231,3.319,233,3.16,235,4.151,236,3.675,237,4.151,239,1.913,241,3.407,245,2.446,246,4.711,247,4.711,248,2.708,249,4.873,250,4.473,251,4.873,252,4.873,253,3.591,254,3.591,255,1.765,256,4.873,257,4.873,258,4.873,259,4.873,260,4.873,261,3.059,262,4.873,263,4.873,264,3.059,265,3.319]],["title/classes/CreateProductDto.html",[49,0.087,266,2.045]],["body/classes/CreateProductDto.html",[3,0.266,4,0.24,5,0.165,7,0.475,12,2.064,13,0.022,19,0.948,24,2.846,28,3.274,33,1.268,34,0.828,36,2.31,40,0.489,44,0.938,48,0.266,49,0.111,61,0.014,62,0.014,93,1.587,205,1.053,208,1.56,224,2.268,230,3.02,233,3.196,239,1.742,245,2.227,248,3.445,250,4.906,261,2.785,264,2.785,265,3.586,266,2.624,267,5.108,268,2.806,269,3.586,270,4.569,271,3.891,272,4.855,273,4.855,274,3.891,275,3.891,276,3.891,277,3.891,278,3.891,279,2.785,280,3.891,281,3.891,282,3.27,283,3.891,284,3.445,285,3.27,286,3.27,287,4.569,288,3.891,289,3.27,290,3.891,291,3.891,292,3.27,293,2.785]],["title/classes/CreateTableDto.html",[49,0.087,294,2.045]],["body/classes/CreateTableDto.html",[3,0.364,4,0.328,5,0.226,7,0.649,12,1.618,13,0.022,17,3.829,19,0.743,34,0.649,36,1.618,40,0.602,44,1.282,48,0.364,49,0.137,61,0.017,62,0.017,117,2.996,205,1.439,208,1.92,224,3.303,226,4.789,227,4.24,230,2.61,231,3.829,233,2.996,236,4.24,239,2.381,290,4.789,294,3.229,295,4.789,296,3.37,297,4.469,298,4.469]],["title/classes/CreateUserDto.html",[49,0.087,299,2.045]],["body/classes/CreateUserDto.html",[3,0.234,4,0.211,5,0.145,7,0.417,12,2.067,13,0.022,17,2.838,19,0.95,28,3.088,33,1.181,34,0.829,36,2.067,40,0.446,44,0.824,48,0.234,49,0.101,61,0.013,62,0.013,93,1.663,103,3.662,118,3.613,181,2.612,182,2.815,194,4.743,205,0.925,208,1.422,230,3.022,233,3.172,239,1.531,248,3.142,265,3.662,268,2.612,279,2.447,280,3.549,283,4.58,291,3.549,299,2.393,300,5.07,301,2.166,302,4.902,303,2.447,304,4.167,305,5.377,306,5.377,307,4.167,308,4.054,309,2.873,310,4.167,311,3.549,312,2.873,313,4.167,314,5.377,315,4.167,316,3.549,317,3.549,318,2.873,319,4.167,320,4.167,321,3.142,322,2.873,323,2.873,324,4.167,325,4.167,326,4.167,327,4.167,328,2.873,329,2.873,330,2.873,331,2.873,332,2.873,333,2.873,334,2.873]],["title/injectables/JwtStrategy.html",[89,1.021,151,2.218]],["body/injectables/JwtStrategy.html",[3,0.293,4,0.264,5,0.182,7,0.523,8,1.667,13,0.023,19,0.812,32,1.484,33,1.176,34,0.863,35,1.247,39,1.16,40,0.636,41,0.77,48,0.293,49,0.088,50,1.472,51,1.385,55,1.788,59,1.23,61,0.015,62,0.015,89,1.4,90,1.672,93,0.92,115,2.006,118,2.069,119,2.716,128,1.385,151,3.041,161,1.788,164,3.068,169,2.952,170,2.069,171,2.069,172,2.427,175,2.424,177,4.159,179,2.069,181,2.602,186,3.068,188,1.919,189,2.716,190,2.243,191,1.672,201,2.716,202,1.672,228,3.068,335,3.068,336,4.883,337,3.602,338,4.883,339,4.883,340,3.602,341,3.602,342,3.602,343,3.602,344,3.602,345,3.602,346,3.068,347,2.243,348,3.602,349,3.602,350,3.602,351,3.602,352,3.602,353,3.068,354,3.602,355,3.602,356,3.326,357,3.602]],["title/classes/LoginDto.html",[49,0.087,106,2.218]],["body/classes/LoginDto.html",[3,0.34,4,0.306,5,0.211,7,0.606,12,1.95,13,0.022,19,0.896,34,0.782,36,1.95,40,0.577,44,1.198,48,0.34,49,0.131,61,0.017,62,0.017,93,1.608,106,3.353,118,3.616,181,3.472,182,3.423,194,4.06,205,1.345,208,1.838,230,2.922,233,3.175,239,2.225,265,4.059,308,4.06,321,4.06,358,3.556,359,5.384,360,4.175,361,4.175,362,5.959]],["title/classes/LoginResponseDto.html",[49,0.087,133,2.218]],["body/classes/LoginResponseDto.html",[3,0.341,4,0.308,5,0.211,7,0.608,12,1.954,13,0.022,19,0.898,34,0.784,36,1.954,40,0.578,44,1.202,48,0.341,49,0.102,61,0.017,62,0.017,93,1.378,103,3.675,110,4.501,115,2.418,118,3.099,119,4.069,130,2.854,133,3.361,161,2.679,205,1.349,208,1.842,230,2.505,233,3.18,303,4.596,363,5.084,364,3.569,365,5.396,366,3.361,367,5.396,368,4.19,369,5.396,370,4.19]],["title/classes/Order.html",[49,0.087,241,2.045]],["body/classes/Order.html",[3,0.319,4,0.288,5,0.198,7,0.569,13,0.022,19,1.091,34,0.952,35,1.796,40,0.619,48,0.319,49,0.095,61,0.016,62,0.016,93,1.319,115,2.375,130,2.668,205,1.262,208,1.763,209,3.599,241,2.967,255,2.093,371,3.337,372,3.599,373,3.255,374,3.599,375,3.826,376,3.918,377,3.918,378,2.869,379,3.918,380,3.918,381,3.918,382,3.918,383,3.918,384,3.918]],["title/controllers/OrderController.html",[0,1.29,385,2.425]],["body/controllers/OrderController.html",[0,1.123,2,1.123,3,0.253,4,0.228,5,0.157,7,0.45,8,1.503,12,1.853,13,0.023,14,1.932,15,2.742,19,0.851,26,3.469,32,1.338,33,1.06,34,0.639,35,1.124,39,1.648,40,0.673,41,0.663,42,3.198,43,1.782,44,0.89,48,0.253,49,0.075,50,1.268,51,1.193,52,1.932,53,2.939,59,1.747,61,0.014,62,0.014,93,1.307,101,1.932,115,2.212,122,2.528,125,2.742,126,1.932,127,1.932,128,1.193,129,2.742,130,2.113,137,2.113,139,2.642,145,1.932,204,3.999,215,2.998,221,4.199,240,1.418,241,1.782,255,2.017,366,2.742,385,2.998,386,2.642,387,2.765,388,2.185,389,3.102,390,2.113,391,2.998,392,3.102,393,2.998,394,3.319,395,4.402,396,3.102,397,1.54,398,2.113,399,3.102,400,2.339,401,1.54,402,2.642,403,2.939,404,2.642,405,3.102,406,3.102,407,3.102,408,3.102,409,3.102,410,2.113,411,2.113,412,3.102]],["title/modules/OrderModule.html",[63,1.216,71,2.218]],["body/modules/OrderModule.html",[2,1.95,3,0.34,4,0.306,5,0.211,13,0.022,40,0.698,41,0.893,48,0.34,49,0.102,61,0.017,62,0.017,63,1.838,65,1.817,66,2.2,71,4.284,72,2.903,76,2.673,77,2.073,78,1.938,80,2.869,81,3.092,128,1.605,154,2.601,157,2.601,159,2.601,160,2.601,161,2.073,385,4.059,403,3.832,404,3.556,413,3.556,414,3.556,415,4.175,416,4.175,417,4.175]],["title/injectables/OrderService.html",[89,1.021,403,2.045]],["body/injectables/OrderService.html",[3,0.201,4,0.181,5,0.125,7,0.358,8,1.271,13,0.023,19,0.831,32,1.362,33,1.45,34,0.651,35,1.145,36,1.624,39,1.444,40,0.574,41,0.528,48,0.201,49,0.06,50,1.009,51,0.949,55,1.225,59,1.531,61,0.012,62,0.012,89,1.068,90,1.145,93,1.439,115,1.808,170,1.417,171,1.417,172,2.041,175,2.226,179,1.417,204,3.642,209,3.11,224,2.479,240,1.444,244,5.094,246,2.102,247,3.171,255,2.04,268,1.315,269,1.681,373,2.479,378,1.848,387,2.479,388,1.848,397,1.848,401,1.225,402,2.102,403,2.138,418,2.102,419,2.468,420,3.723,421,2.468,422,3.723,423,2.468,424,2.468,425,1.861,426,1.417,427,1.417,428,1.681,429,3.053,430,2.468,431,3.723,432,2.468,433,2.468,434,2.468,435,2.468,436,2.468,437,2.468,438,2.468,439,5.568,440,1.681,441,2.468,442,2.468,443,2.468,444,2.102]],["title/modules/PrismaModule.html",[63,1.216,72,1.549]],["body/modules/PrismaModule.html",[3,0.37,4,0.333,5,0.229,13,0.022,40,0.608,41,0.97,48,0.37,49,0.11,61,0.018,62,0.018,63,1.938,65,1.974,66,2.32,72,3.009,76,2.818,77,2.252,78,2.106,80,3.024,172,2.933,445,3.864,446,3.864,447,3.864,448,4.536,449,5.675,450,4.536]],["title/injectables/PrismaService.html",[89,1.021,172,1.455]],["body/injectables/PrismaService.html",[3,0.338,4,0.304,5,0.209,7,0.602,8,1.83,13,0.023,19,0.892,32,1.26,33,0.999,34,0.602,35,1.059,39,1.726,40,0.574,41,0.887,48,0.338,49,0.101,61,0.017,62,0.017,89,1.537,90,1.925,169,3.611,172,2.191,188,2.856,347,3.338,425,3.127,451,3.532,452,5.059,453,5.36,454,6.66,455,5.36,456,6.279,457,4.147,458,4.147,459,4.147,460,4.147,461,4.147,462,4.147,463,4.147]],["title/classes/Product.html",[49,0.087,378,1.768]],["body/classes/Product.html",[3,0.332,4,0.299,5,0.206,7,0.592,13,0.022,19,1.123,33,1.419,34,0.98,35,1.693,36,2.134,48,0.332,49,0.099,61,0.016,62,0.016,93,1.748,205,1.313,208,1.81,224,2.632,255,2.134,268,3.139,269,4.013,372,3.669,374,3.669,375,3.886,378,2.632,464,3.472,465,4.077,466,4.077,467,4.077,468,4.077,469,4.077,470,4.077,471,4.077]],["title/controllers/ProductController.html",[0,1.29,472,2.425]],["body/controllers/ProductController.html",[0,0.936,2,0.936,3,0.21,4,0.19,5,0.13,7,0.375,8,1.316,12,1.979,13,0.023,14,1.609,15,2.4,19,0.909,26,3.801,32,1.553,33,1.231,34,0.742,35,1.305,39,1.76,40,0.614,41,0.553,42,3.292,43,1.484,44,0.741,48,0.21,49,0.063,50,1.056,51,0.993,52,1.609,53,3.139,59,1.744,61,0.012,62,0.012,93,1.593,101,1.609,122,2.213,123,1.76,124,1.76,125,2.4,126,1.609,127,1.609,128,0.993,129,2.4,145,1.609,202,2.139,215,2.625,218,3.282,240,1.241,242,2.625,250,4.602,255,2.364,266,3.292,366,3.57,378,1.283,387,2.536,388,1.913,390,1.76,391,2.625,393,2.625,394,2.906,397,1.283,398,1.76,401,1.283,410,1.76,411,1.76,472,2.625,473,2.201,474,1.789,475,2.584,476,2.584,477,1.484,478,1.948,479,2.906,480,2.584,481,1.948,482,2.584,483,2.584,484,1.484,485,3.801,486,1.948,487,2.906,488,2.584,489,1.948,490,2.647,491,2.201,492,1.484,493,2.584,494,2.584,495,1.948,496,2.584,497,2.584,498,2.584,499,1.948,500,1.948,501,2.584,502,1.948,503,1.948,504,1.948,505,2.584]],["title/modules/ProductModule.html",[63,1.216,73,2.218]],["body/modules/ProductModule.html",[2,1.95,3,0.34,4,0.306,5,0.211,13,0.022,40,0.698,41,0.893,48,0.34,49,0.102,61,0.017,62,0.017,63,1.838,65,1.817,66,2.2,72,2.903,73,4.284,76,2.673,77,2.073,78,1.938,80,2.869,81,3.092,128,1.605,154,2.601,157,2.601,159,2.601,160,2.601,161,2.073,472,4.059,490,3.832,491,3.556,506,3.556,507,4.175,508,3.556,509,4.175,510,4.175]],["title/injectables/ProductService.html",[89,1.021,490,2.045]],["body/injectables/ProductService.html",[3,0.207,4,0.186,5,0.128,7,0.368,8,1.297,13,0.023,19,0.982,29,1.456,32,1.729,33,1.371,34,0.826,35,1.453,39,1.833,40,0.61,41,0.542,48,0.207,49,0.062,50,1.036,51,0.975,55,2.262,59,1.851,61,0.012,62,0.012,89,1.09,90,1.177,93,1.66,113,3.63,117,1.351,169,3.463,170,1.456,171,1.456,172,2.068,175,1.886,179,1.456,188,2.696,190,1.579,191,1.177,202,1.763,240,1.223,242,2.588,255,2.248,266,2.907,356,1.727,378,1.886,387,2.513,388,1.886,397,1.886,401,1.259,426,1.456,427,1.456,428,1.727,429,3.447,440,2.588,474,2.115,477,2.182,484,2.182,485,3.152,490,2.182,492,1.456,511,2.159,512,2.865,513,2.535,514,2.588,515,2.535,516,3.876,517,2.535,518,2.535,519,2.865,520,2.535,521,2.535,522,2.535,523,1.911,524,2.535,525,2.535,526,3.436,527,2.535,528,1.911,529,1.911,530,3.436,531,2.535,532,1.911,533,2.535,534,2.535]],["title/classes/Table.html",[49,0.087,373,1.768]],["body/classes/Table.html",[3,0.365,4,0.329,5,0.226,7,0.651,13,0.022,19,1.075,34,0.939,35,1.736,48,0.365,49,0.109,61,0.017,62,0.017,93,1.439,205,1.445,208,1.924,224,3.306,255,2.232,372,3.838,373,2.798,374,3.838,375,4.026,535,3.821,536,4.486,537,4.486,538,4.486,539,4.486]],["title/controllers/TableController.html",[0,1.29,540,2.425]],["body/controllers/TableController.html",[0,0.922,2,0.922,3,0.207,4,0.187,5,0.128,7,0.37,8,1.301,12,1.967,13,0.023,14,1.586,15,2.374,19,0.903,22,5.176,32,1.541,33,1.222,34,0.737,35,1.295,39,1.749,40,0.633,41,0.544,42,3.274,43,1.462,44,0.73,48,0.207,49,0.062,50,1.04,51,0.979,52,1.586,53,3.119,59,1.731,61,0.012,62,0.012,93,1.587,101,1.586,113,3.49,122,2.189,123,1.734,124,1.734,125,2.374,126,1.586,127,1.586,128,0.979,129,2.374,145,1.586,202,2.12,227,4.582,240,1.227,255,2.291,294,2.913,366,3.159,373,1.892,387,2.518,388,1.892,390,1.734,391,2.596,393,2.596,397,1.264,398,1.734,401,1.264,410,1.734,411,1.734,474,1.769,477,1.462,478,1.92,479,2.874,481,1.92,484,1.462,486,1.92,487,2.874,489,1.92,492,1.462,495,1.92,499,1.92,500,1.92,502,1.92,503,1.92,504,1.92,514,1.734,516,3.882,540,2.596,541,2.168,542,2.546,543,2.546,544,3.811,545,3.811,546,2.546,547,2.546,548,3.159,549,2.546,550,2.874,551,2.168,552,2.624,553,2.168,554,2.546,555,2.546,556,2.546,557,2.546,558,2.546,559,2.546,560,2.546]],["title/modules/TableModule.html",[63,1.216,74,2.218]],["body/modules/TableModule.html",[2,1.95,3,0.34,4,0.306,5,0.211,13,0.022,40,0.698,41,0.893,48,0.34,49,0.102,61,0.017,62,0.017,63,1.838,65,1.817,66,2.2,72,2.903,74,4.284,76,2.673,77,2.073,78,1.938,80,2.869,81,3.092,128,1.605,154,2.601,157,2.601,159,2.601,160,2.601,161,2.073,540,4.059,552,3.832,553,3.556,561,3.556,562,3.556,563,4.175,564,4.175,565,4.175]],["title/injectables/TableService.html",[89,1.021,552,2.045]],["body/injectables/TableService.html",[3,0.207,4,0.186,5,0.128,7,0.368,8,1.297,13,0.023,19,0.982,29,1.456,32,1.729,33,1.371,34,0.826,35,1.453,39,1.833,40,0.61,41,0.542,48,0.207,49,0.062,50,1.036,51,0.975,55,2.262,59,1.851,61,0.012,62,0.012,89,1.09,90,1.177,93,1.66,113,3.63,117,1.351,169,3.463,170,1.456,171,1.456,172,2.068,175,1.886,179,1.456,188,2.696,190,1.579,191,1.177,202,1.763,240,1.223,255,2.248,294,2.907,356,1.727,373,1.886,387,2.513,388,1.886,397,1.886,401,1.259,426,1.456,427,1.456,428,1.727,429,3.447,440,2.588,474,2.115,477,2.182,484,2.182,492,1.456,512,2.865,514,2.588,516,3.876,519,2.865,523,1.911,526,3.436,528,1.911,529,1.911,530,3.436,532,1.911,548,3.152,550,2.865,551,2.159,552,2.182,566,2.159,567,2.535,568,2.535,569,2.535,570,2.535,571,2.535,572,2.535,573,2.535,574,2.535,575,2.535,576,2.535,577,2.535,578,2.535]],["title/classes/UpdateProductDto.html",[49,0.087,485,2.218]],["body/classes/UpdateProductDto.html",[3,0.415,4,0.374,5,0.257,13,0.022,40,0.652,44,1.46,48,0.415,49,0.124,61,0.019,62,0.019,205,1.64,240,1.64,242,3.468,245,3.468,266,2.924,347,3.171,485,3.793,579,4.336,580,3.839,581,5.092]],["title/classes/UpdateTableDto.html",[49,0.087,548,2.218]],["body/classes/UpdateTableDto.html",[3,0.415,4,0.374,5,0.257,13,0.022,40,0.652,44,1.46,48,0.415,49,0.124,61,0.019,62,0.019,205,1.64,240,1.64,294,2.924,296,3.839,347,3.171,548,3.793,550,3.839,580,3.839,582,4.336,583,5.092]],["title/classes/UpdateUserDto.html",[49,0.087,584,2.218]],["body/classes/UpdateUserDto.html",[3,0.415,4,0.374,5,0.257,13,0.022,40,0.652,44,1.46,48,0.415,49,0.124,61,0.019,62,0.019,205,1.64,240,1.64,299,2.924,301,3.839,347,3.171,580,3.839,584,3.793,585,4.336,586,3.839,587,5.092]],["title/classes/User.html",[49,0.087,115,1.29]],["body/classes/User.html",[3,0.332,4,0.299,5,0.206,7,0.592,13,0.022,19,1.123,33,1.419,34,0.98,35,1.693,48,0.332,49,0.099,61,0.016,62,0.016,93,1.782,115,1.92,181,3.139,182,3.384,205,1.313,208,1.81,255,2.134,268,3.139,372,3.669,374,3.669,375,3.886,588,3.472,589,4.077,590,4.077,591,4.077,592,4.077,593,4.077,594,4.077,595,4.077]],["title/controllers/UserController.html",[0,1.29,596,2.425]],["body/controllers/UserController.html",[0,0.924,2,0.924,3,0.208,4,0.187,5,0.129,7,0.37,8,1.303,12,1.969,13,0.023,14,1.589,15,2.377,19,0.904,26,3.787,32,1.543,33,1.223,34,0.737,35,1.297,39,1.751,40,0.611,41,0.546,42,3.276,43,1.465,44,0.732,48,0.208,49,0.062,50,1.043,51,0.981,52,1.589,53,3.122,59,1.733,61,0.012,62,0.012,93,1.588,101,1.589,115,0.924,118,3.492,122,2.192,123,1.737,124,1.737,125,2.377,126,1.589,127,1.589,128,0.981,129,3.386,145,3.162,202,2.123,215,2.6,240,1.229,255,2.251,299,3.276,366,3.553,387,2.52,388,1.895,390,1.737,391,2.6,393,2.6,394,2.878,397,1.266,398,1.737,401,1.266,410,1.737,411,1.737,474,1.772,477,1.465,478,1.924,479,2.878,481,1.924,484,1.465,486,1.924,487,2.878,489,1.924,492,1.465,495,1.924,499,1.924,500,1.924,502,1.924,503,1.924,504,1.924,584,3.787,586,2.878,596,2.6,597,2.173,598,2.551,599,2.551,600,4.574,601,2.551,602,2.551,603,2.551,604,2.551,605,2.551,606,2.627,607,2.173,608,2.551,609,2.551,610,2.551,611,2.551,612,2.551,613,2.551,614,2.551,615,2.551]],["title/modules/UserModule.html",[63,1.216,75,2.218]],["body/modules/UserModule.html",[2,1.95,3,0.34,4,0.306,5,0.211,13,0.022,40,0.698,41,0.893,48,0.34,49,0.102,61,0.017,62,0.017,63,1.838,65,1.817,66,2.2,72,2.903,75,4.284,76,2.673,77,2.073,78,1.938,80,2.869,81,3.092,128,1.605,154,2.601,157,2.601,159,2.601,160,2.601,161,2.073,596,4.059,606,3.832,607,3.556,616,3.556,617,3.556,618,4.175,619,4.175,620,4.175]],["title/injectables/UserService.html",[89,1.021,606,2.045]],["body/injectables/UserService.html",[3,0.167,4,0.15,5,0.103,7,0.298,8,1.101,13,0.023,19,0.943,29,1.177,32,1.588,33,1.365,34,0.794,35,1.335,39,1.683,40,0.586,41,0.438,48,0.167,49,0.05,50,0.837,51,0.788,55,1.98,59,1.68,61,0.01,62,0.01,89,0.925,90,0.951,93,1.58,113,3.427,115,1.168,117,1.091,169,3.422,170,1.177,171,1.177,172,1.849,175,1.601,178,2.432,179,1.177,180,3.008,181,1.718,182,2.291,188,2.785,189,1.545,190,2.485,191,1.852,202,2.1,208,1.101,240,1.285,244,4.665,255,2.204,268,1.718,299,2.599,353,2.747,356,2.717,372,2.009,374,2.009,387,2.246,388,1.601,397,1.601,401,1.017,426,1.177,427,1.177,428,1.395,429,3.082,439,3.854,440,2.197,474,1.852,477,1.852,484,1.852,492,1.177,512,2.432,514,2.197,516,3.56,519,2.432,523,1.545,526,3.008,528,1.545,529,1.545,530,3.008,532,1.545,584,2.818,586,2.432,606,1.852,621,1.745,622,3.989,623,2.049,624,2.049,625,2.049,626,2.049,627,2.049,628,2.049,629,2.049,630,2.049,631,1.745,632,1.745,633,2.049,634,2.049,635,2.049,636,2.049,637,4.525,638,3.989,639,4.525,640,3.225,641,3.225,642,3.225,643,3.225,644,3.225,645,2.049,646,2.432,647,3.225,648,3.225,649,2.049,650,2.049]],["title/changelog.html",[651,2.03,652,2.03,653,2.539]],["body/changelog.html",[4,0.268,5,0.262,13,0.014,30,1.529,61,0.009,62,0.009,78,0.833,191,1.348,230,1.348,240,0.578,375,2.276,474,1.348,646,2.756,653,5.314,654,2.903,655,3.926,656,3.576,657,1.796,658,3.113,659,2.903,660,3.655,661,1.796,662,1.796,663,2.473,664,4.198,665,1.529,666,1.796,667,3.655,668,1.529,669,5.732,670,1.796,671,1.529,672,1.796,673,3.166,674,1.796,675,4.198,676,1.796,677,1.796,678,1.796,679,1.796,680,6.074,681,1.796,682,3.113,683,1.796,684,1.796,685,2.903,686,1.796,687,1.796,688,3.113,689,2.903,690,2.903,691,3.655,692,2.903,693,1.796,694,2.903,695,6.682,696,1.796,697,1.796,698,1.796,699,1.796,700,2.903,701,1.796,702,2.903,703,1.796,704,2.903,705,1.796,706,2.903,707,1.796,708,1.796,709,1.796,710,1.796,711,1.796,712,1.796,713,1.796,714,2.903,715,2.903,716,1.796,717,1.796,718,1.796,719,1.796,720,1.796,721,1.796,722,1.796,723,1.796,724,1.796,725,1.796,726,1.796,727,1.796,728,4.931,729,3.655,730,1.529,731,1.796,732,3.926,733,5.403,734,1.796,735,2.903,736,1.796,737,1.796,738,1.796,739,2.903,740,1.796,741,1.796,742,1.796,743,1.796,744,3.655,745,2.903,746,2.903,747,2.903,748,1.796,749,1.796,750,1.796,751,1.796,752,1.796,753,3.655,754,3.655,755,2.903,756,1.529,757,2.903,758,2.903,759,1.529,760,1.796,761,2.903,762,1.529,763,1.796,764,2.903,765,4.602,766,4.931,767,1.796,768,2.903,769,1.796,770,2.473,771,1.796,772,4.609,773,3.655,774,1.529,775,1.796,776,1.796,777,1.796,778,1.796,779,2.903,780,1.796,781,1.796,782,2.473,783,1.796,784,1.796,785,3.113,786,1.796,787,1.529,788,1.796,789,1.796,790,1.796,791,1.796,792,1.796,793,1.796,794,1.796,795,1.529,796,1.796,797,1.796,798,2.903,799,1.796,800,1.796,801,1.796,802,4.198,803,1.796,804,1.796,805,1.529,806,1.796,807,1.796,808,1.796,809,1.796,810,1.796,811,1.796,812,1.796,813,2.903,814,1.796,815,1.796,816,2.903,817,1.796,818,1.796,819,1.796,820,1.796,821,1.796,822,1.529,823,1.796,824,2.903,825,1.796,826,1.796,827,1.796,828,1.796,829,1.796,830,4.931,831,1.796,832,2.903,833,1.796,834,3.655,835,3.655,836,1.796,837,2.903,838,1.796,839,1.796,840,1.796,841,1.529,842,1.796,843,1.796,844,1.796,845,1.796,846,2.903,847,1.796,848,2.903,849,1.529,850,1.796,851,1.796,852,1.796,853,1.796,854,1.796,855,1.796,856,1.796,857,1.796,858,2.903,859,1.796,860,2.903,861,1.796,862,1.796,863,1.796,864,1.796,865,1.796,866,1.796,867,1.796,868,1.796,869,1.796,870,1.796,871,1.796,872,1.796,873,1.796,874,1.796,875,1.796,876,1.796,877,1.796,878,1.529,879,1.796,880,1.796,881,1.796,882,1.796,883,1.796,884,1.796,885,1.796,886,1.796,887,1.529,888,1.796,889,1.796,890,1.796,891,1.796,892,1.796,893,1.796,894,1.796,895,1.529,896,2.473,897,1.796,898,1.796,899,1.796,900,1.796,901,1.796,902,1.796]],["title/contributing.html",[651,2.03,652,2.03,903,2.539]],["body/contributing.html",[5,0.11,11,3.524,13,0.01,19,0.362,24,1.354,32,0.661,61,0.01,62,0.01,66,0.889,122,1.249,180,2.548,191,1.568,444,3.53,474,1.009,655,1.852,656,5.418,663,1.852,671,2.878,673,3.125,682,1.852,730,2.878,732,2.878,756,2.878,759,2.878,762,2.878,770,1.852,782,1.852,785,1.852,787,1.852,795,1.852,805,2.878,822,1.852,841,1.852,895,1.852,896,3.981,903,2.878,904,3.379,905,4.145,906,1.852,907,2.174,908,2.174,909,3.379,910,2.174,911,3.379,912,2.174,913,2.174,914,3.379,915,5.593,916,5.593,917,3.379,918,2.174,919,4.145,920,2.174,921,2.174,922,2.174,923,3.379,924,2.174,925,2.174,926,2.174,927,3.379,928,3.379,929,2.174,930,2.174,931,4.145,932,1.639,933,2.174,934,2.174,935,2.174,936,2.174,937,2.174,938,2.174,939,2.174,940,2.174,941,2.174,942,2.174,943,2.174,944,2.174,945,2.174,946,2.174,947,3.379,948,2.174,949,2.174,950,3.379,951,2.174,952,2.174,953,3.379,954,2.174,955,5.062,956,2.174,957,5.062,958,3.379,959,2.174,960,3.379,961,2.174,962,2.174,963,2.174,964,2.174,965,2.174,966,2.174,967,2.174,968,2.174,969,2.174,970,2.174,971,3.379,972,2.174,973,2.174,974,2.174,975,3.379,976,2.174,977,3.379,978,5.062,979,2.174,980,2.174,981,2.174,982,2.174,983,3.379,984,2.174,985,2.174,986,2.174,987,2.174,988,2.174,989,2.174,990,2.174,991,2.174,992,2.174,993,2.174,994,2.174,995,2.174,996,2.174,997,2.174,998,3.379,999,4.145,1000,2.174,1001,2.174,1002,2.174,1003,2.174,1004,2.174,1005,2.174,1006,2.174,1007,2.174,1008,3.379,1009,2.174,1010,2.174,1011,3.379,1012,2.174,1013,2.174,1014,2.174,1015,2.174,1016,2.174,1017,2.174,1018,4.145,1019,2.174,1020,2.174,1021,2.174,1022,2.174,1023,3.379,1024,2.174,1025,2.174,1026,2.174,1027,2.174,1028,2.174,1029,2.174,1030,2.174,1031,2.174,1032,3.379,1033,2.174,1034,2.174,1035,2.174,1036,3.379,1037,3.379,1038,2.174,1039,2.174,1040,2.174,1041,2.174,1042,2.174,1043,2.174,1044,2.174,1045,2.174,1046,2.174,1047,2.174,1048,2.174,1049,2.174,1050,2.174,1051,3.379,1052,2.174,1053,2.174,1054,2.174,1055,2.174,1056,2.174,1057,2.174,1058,2.174,1059,2.174,1060,3.379,1061,2.174,1062,3.379,1063,3.379,1064,2.174,1065,2.174,1066,2.174,1067,2.174,1068,2.174,1069,2.174,1070,2.174,1071,2.174,1072,2.174,1073,2.174,1074,2.174,1075,2.174,1076,3.379,1077,2.174,1078,2.174,1079,2.174,1080,2.174,1081,2.174,1082,3.379,1083,2.174,1084,2.174,1085,2.174,1086,2.174,1087,2.174,1088,2.174,1089,2.174,1090,2.174,1091,2.174,1092,2.174,1093,2.174,1094,2.174,1095,2.174,1096,2.174,1097,2.174,1098,2.174,1099,2.174,1100,2.174,1101,2.174,1102,2.174,1103,2.174,1104,2.174,1105,2.174,1106,2.174,1107,2.174,1108,2.174,1109,2.174,1110,2.174,1111,2.174,1112,2.174,1113,2.174,1114,2.174,1115,2.174,1116,2.174]],["title/coverage.html",[1117,4.127]],["body/coverage.html",[0,2.064,1,1.734,5,0.128,6,2.168,13,0.022,34,0.37,45,1.462,49,0.161,61,0.012,62,0.012,89,1.743,91,2.168,99,1.734,100,2.168,106,1.586,115,1.38,131,1.462,133,1.586,137,1.734,151,1.586,168,2.168,172,1.04,175,1.264,191,1.182,204,1.586,206,2.874,207,2.168,209,1.586,211,1.734,241,2.189,245,3.111,266,1.462,267,2.168,294,1.462,295,2.168,296,2.874,299,1.462,300,2.168,301,2.874,335,2.168,358,2.168,363,2.168,364,2.168,371,2.168,373,2.268,378,1.892,385,1.734,386,2.168,400,1.92,403,1.462,418,2.168,426,1.462,427,1.462,451,2.168,464,2.168,472,1.734,473,2.168,485,1.586,490,1.462,511,2.168,535,2.168,540,1.734,541,2.168,548,1.586,552,1.462,566,2.168,579,2.168,582,2.168,584,1.586,585,2.168,588,2.168,596,1.734,597,2.168,606,1.462,621,2.168,849,3.246,1117,2.168,1118,2.546,1119,2.546,1120,2.546,1121,2.546,1122,2.546,1123,7.204,1124,3.811,1125,5.909,1126,2.168,1127,6.214,1128,6.641,1129,2.168,1130,2.168,1131,3.811,1132,2.546,1133,4.568,1134,3.246,1135,2.168,1136,3.246,1137,3.246,1138,2.168,1139,3.246,1140,3.246,1141,3.246,1142,3.246,1143,2.168,1144,5.072,1145,5.072,1146,2.546,1147,2.168,1148,2.546]],["title/dependencies.html",[66,1.749,1149,2.539]],["body/dependencies.html",[13,0.023,38,4.712,41,0.932,44,1.249,49,0.135,61,0.017,62,0.017,66,1.78,128,1.675,156,3.285,161,2.163,178,3.285,234,3.71,239,2.321,346,5.178,425,3.285,665,3.71,1150,6.396,1151,4.356,1152,4.356,1153,4.356,1154,4.356,1155,4.356,1156,4.356,1157,4.356,1158,4.356,1159,4.356,1160,4.356,1161,4.356,1162,4.356,1163,4.356,1164,4.356,1165,4.356,1166,4.356,1167,4.356,1168,4.356,1169,4.356,1170,4.356,1171,4.356,1172,4.356,1173,4.356,1174,4.356]],["title/miscellaneous/functions.html",[1175,2.03,1176,3.645]],["body/miscellaneous/functions.html",[7,0.733,13,0.021,32,1.534,33,1.216,34,0.733,35,1.289,39,1.626,61,0.019,62,0.019,222,4.3,426,3.481,427,2.9,1129,4.3,1130,5.531,1147,5.162,1175,3.439,1176,4.3,1177,5.049,1178,5.049,1179,5.049,1180,6.494]],["title/index.html",[7,0.433,651,2.03,652,2.03]],["body/index.html",[13,0.02,61,0.02,62,0.02,96,4.758,284,4.212,1181,5.587]],["title/modules.html",[65,2.108]],["body/modules.html",[13,0.018,61,0.018,62,0.018,64,3.301,65,2.109,70,3.018,71,3.018,72,2.109,73,3.018,74,3.018,75,3.018,1182,7.013,1183,7.013,1184,7.013,1185,7.013]],["title/overview.html",[1186,4.127]],["body/overview.html",[2,1.227,13,0.022,45,3.083,61,0.015,62,0.015,64,4.791,65,1.475,66,1.914,67,2.887,68,2.887,69,2.887,70,4.15,71,4.012,72,2.964,73,4.012,74,4.012,75,4.012,76,2.325,77,1.683,78,1.573,90,1.573,131,3.083,148,2.887,150,2.887,151,3.343,172,2.632,205,1.092,403,3.083,413,2.887,414,2.887,445,2.887,446,2.887,447,2.887,490,3.083,506,2.887,508,2.887,552,3.083,561,2.887,562,2.887,606,3.083,616,2.887,617,2.887,1186,2.887,1187,3.39,1188,3.39,1189,3.39,1190,3.39]],["title/properties.html",[208,1.461,1149,2.539]],["body/properties.html",[13,0.022,36,1.951,61,0.02,62,0.02,208,1.839,673,4.062,878,4.588,1191,5.387,1192,5.387,1193,5.387]],["title/todo.html",[651,2.03,652,2.03,1194,2.539]],["body/todo.html",[5,0.243,13,0.02,36,1.741,61,0.018,62,0.018,230,2.731,240,1.548,658,4.095,668,4.095,688,4.095,765,4.095,774,4.095,887,4.095,906,4.095,1194,4.095,1195,6.357,1196,4.808,1197,4.808,1198,4.808,1199,4.808,1200,5.883,1201,4.808,1202,4.808,1203,4.808,1204,4.808,1205,4.808,1206,4.808,1207,4.808,1208,4.808,1209,4.808,1210,4.808,1211,4.808,1212,4.808,1213,4.808,1214,4.808,1215,4.808]],["title/miscellaneous/variables.html",[932,3.227,1175,2.03]],["body/miscellaneous/variables.html",[7,0.358,11,1.861,13,0.023,24,2.792,28,3.236,29,1.417,33,1.291,34,0.651,36,1.624,55,2.66,59,0.842,61,0.012,62,0.012,115,1.808,137,2.536,169,2.389,175,2.66,181,1.984,182,2.138,188,2.66,191,1.145,201,1.861,202,1.145,209,2.319,224,2.479,231,1.681,240,1.444,268,2.66,269,3.053,271,3.818,272,4.253,273,4.798,274,3.818,275,3.818,276,3.818,277,3.818,278,4.253,281,3.818,284,3.381,288,3.818,293,2.102,308,1.861,311,2.102,316,2.102,317,2.102,321,1.861,373,1.848,378,1.848,400,1.861,452,4.253,474,2.081,631,5.247,632,5.247,646,1.861,932,1.861,1126,3.171,1134,2.102,1135,3.171,1136,2.102,1137,3.818,1138,3.171,1139,2.102,1140,3.818,1141,2.102,1142,3.818,1143,3.171,1175,1.681,1216,2.468,1217,3.723,1218,3.723,1219,3.723,1220,3.723,1221,2.468,1222,2.468,1223,2.468,1224,2.468,1225,2.468,1226,2.468,1227,5.634,1228,2.468,1229,2.468,1230,2.468,1231,2.468,1232,2.468,1233,2.468,1234,2.468,1235,2.468,1236,2.468,1237,2.468,1238,2.468,1239,2.468,1240,2.468,1241,2.468,1242,2.468,1243,2.468]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":1123,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":878,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["0.0.2",{"_index":872,"title":{},"body":{"changelog.html":{}}}],["0.0.3",{"_index":868,"title":{},"body":{"changelog.html":{}}}],["0.0.4",{"_index":844,"title":{},"body":{"changelog.html":{}}}],["0.0.5",{"_index":833,"title":{},"body":{"changelog.html":{}}}],["0.0.6",{"_index":829,"title":{},"body":{"changelog.html":{}}}],["0.0.7",{"_index":817,"title":{},"body":{"changelog.html":{}}}],["0.0.8",{"_index":797,"title":{},"body":{"changelog.html":{}}}],["0.1.0",{"_index":791,"title":{},"body":{"changelog.html":{}}}],["0.1.13",{"_index":1167,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":1161,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":781,"title":{},"body":{"changelog.html":{}}}],["0.3.0",{"_index":739,"title":{},"body":{"changelog.html":{}}}],["0.5.1",{"_index":1160,"title":{},"body":{"dependencies.html":{}}}],["0.5.2",{"_index":1162,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1128,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1124,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1125,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1131,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1133,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1145,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1132,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1144,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1146,"title":{},"body":{"coverage.html":{}}}],["02",{"_index":798,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":774,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["04f66779",{"_index":256,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["05",{"_index":879,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":667,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":873,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":834,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":835,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":231,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateTableDto.html":{},"miscellaneous/variables.html":{}}}],["1.0.0",{"_index":665,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["1.0.1",{"_index":1154,"title":{},"body":{"dependencies.html":{}}}],["1.4",{"_index":1113,"title":{},"body":{"contributing.html":{}}}],["1/2",{"_index":1122,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":646,"title":{},"body":{"injectables/UserService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["12",{"_index":773,"title":{},"body":{"changelog.html":{}}}],["12.34",{"_index":288,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["14",{"_index":1190,"title":{},"body":{"overview.html":{}}}],["16",{"_index":818,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":799,"title":{},"body":{"changelog.html":{}}}],["1d",{"_index":1207,"title":{},"body":{"todo.html":{}}}],["2",{"_index":293,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["20",{"_index":668,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["2014",{"_index":830,"title":{},"body":{"changelog.html":{}}}],["2015",{"_index":772,"title":{},"body":{"changelog.html":{}}}],["2017",{"_index":666,"title":{},"body":{"changelog.html":{}}}],["2020",{"_index":1205,"title":{},"body":{"todo.html":{}}}],["24h",{"_index":167,"title":{},"body":{"modules/AuthModule.html":{}}}],["2})@apiproperty({description",{"_index":286,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["3",{"_index":1238,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3.0.2",{"_index":1169,"title":{},"body":{"dependencies.html":{}}}],["3.13.0",{"_index":1158,"title":{},"body":{"dependencies.html":{}}}],["31",{"_index":880,"title":{},"body":{"changelog.html":{}}}],["345",{"_index":1214,"title":{},"body":{"todo.html":{}}}],["3d",{"_index":1202,"title":{},"body":{"todo.html":{}}}],["4.0.0",{"_index":1163,"title":{},"body":{"dependencies.html":{}}}],["4.3.0",{"_index":1174,"title":{},"body":{"dependencies.html":{}}}],["4c5c",{"_index":258,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["5.0.1",{"_index":1159,"title":{},"body":{"dependencies.html":{}}}],["5.2.1",{"_index":1157,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":1121,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":1188,"title":{},"body":{"overview.html":{}}}],["7",{"_index":1187,"title":{},"body":{"overview.html":{}}}],["7.2.0",{"_index":1171,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1189,"title":{},"body":{"overview.html":{}}}],["8.0.0",{"_index":1150,"title":{},"body":{"dependencies.html":{}}}],["8.2.1",{"_index":1155,"title":{},"body":{"dependencies.html":{}}}],["8601",{"_index":821,"title":{},"body":{"changelog.html":{}}}],["_count",{"_index":442,"title":{},"body":{"injectables/OrderService.html":{}}}],["a140",{"_index":259,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["abcd@1234",{"_index":308,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"miscellaneous/variables.html":{}}}],["abusive",{"_index":1077,"title":{},"body":{"contributing.html":{}}}],["acceptable",{"_index":1029,"title":{},"body":{"contributing.html":{}}}],["accepting",{"_index":990,"title":{},"body":{"contributing.html":{}}}],["account",{"_index":1068,"title":{},"body":{"contributing.html":{}}}],["aciek",{"_index":712,"title":{},"body":{"changelog.html":{}}}],["acting",{"_index":1069,"title":{},"body":{"contributing.html":{}}}],["action",{"_index":1035,"title":{},"body":{"contributing.html":{}}}],["adapted",{"_index":1111,"title":{},"body":{"contributing.html":{}}}],["added",{"_index":669,"title":{},"body":{"changelog.html":{}}}],["address",{"_index":1018,"title":{},"body":{"contributing.html":{}}}],["adheres",{"_index":661,"title":{},"body":{"changelog.html":{}}}],["advances",{"_index":1005,"title":{},"body":{"contributing.html":{}}}],["against",{"_index":758,"title":{},"body":{"changelog.html":{}}}],["age",{"_index":963,"title":{},"body":{"contributing.html":{}}}],["aishek",{"_index":714,"title":{},"body":{"changelog.html":{}}}],["aligned",{"_index":1047,"title":{},"body":{"contributing.html":{}}}],["amielucha",{"_index":710,"title":{},"body":{"changelog.html":{}}}],["answer",{"_index":792,"title":{},"body":{"changelog.html":{}}}],["answers",{"_index":893,"title":{},"body":{"changelog.html":{}}}],["apenas",{"_index":313,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["api",{"_index":98,"title":{},"body":{"injectables/AppService.html":{}}}],["apibearerauth",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["apioperation",{"_index":42,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["apiproperty",{"_index":233,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{}}}],["apiproperty({description",{"_index":303,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginResponseDto.html":{}}}],["apitags",{"_index":43,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["apitags('auth",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('order",{"_index":405,"title":{},"body":{"controllers/OrderController.html":{}}}],["apitags('product",{"_index":493,"title":{},"body":{"controllers/ProductController.html":{}}}],["apitags('status",{"_index":47,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags('table",{"_index":554,"title":{},"body":{"controllers/TableController.html":{}}}],["apitags('user",{"_index":608,"title":{},"body":{"controllers/UserController.html":{}}}],["aplicação",{"_index":18,"title":{},"body":{"controllers/AppController.html":{}}}],["app",{"_index":458,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.close",{"_index":463,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.controller",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":46,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appearance",{"_index":972,"title":{},"body":{"contributing.html":{}}}],["applies",{"_index":1058,"title":{},"body":{"contributing.html":{}}}],["appmodule",{"_index":64,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appointed",{"_index":1070,"title":{},"body":{"contributing.html":{}}}],["appropriate",{"_index":1032,"title":{},"body":{"contributing.html":{}}}],["appservice",{"_index":45,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["argument",{"_index":757,"title":{},"body":{"changelog.html":{}}}],["art4",{"_index":697,"title":{},"body":{"changelog.html":{}}}],["asked",{"_index":684,"title":{},"body":{"changelog.html":{}}}],["assume",{"_index":863,"title":{},"body":{"changelog.html":{}}}],["async",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["attacks",{"_index":1010,"title":{},"body":{"contributing.html":{}}}],["attention",{"_index":1004,"title":{},"body":{"contributing.html":{}}}],["attribution",{"_index":1110,"title":{},"body":{"contributing.html":{}}}],["autenticado",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponseDto.html":{}}}],["autenticação",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":153,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":99,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["authmodule",{"_index":70,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1193,"title":{},"body":{"properties.html":{}}}],["authors",{"_index":741,"title":{},"body":{"changelog.html":{}}}],["authservice",{"_index":131,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["available",{"_index":1114,"title":{},"body":{"contributing.html":{}}}],["await",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["azkidenz",{"_index":699,"title":{},"body":{"changelog.html":{}}}],["badrequestexception",{"_index":634,"title":{},"body":{"injectables/UserService.html":{}}}],["badrequestexception('as",{"_index":640,"title":{},"body":{"injectables/UserService.html":{}}}],["ban",{"_index":1048,"title":{},"body":{"contributing.html":{}}}],["based",{"_index":659,"title":{},"body":{"changelog.html":{}}}],["baseurl",{"_index":56,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["basic",{"_index":897,"title":{},"body":{"changelog.html":{}}}],["bcfa",{"_index":257,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["bcrypt",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["bcrypt.compare(password",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(data.password",{"_index":649,"title":{},"body":{"injectables/UserService.html":{}}}],["bcrypt.hash(dto.password",{"_index":645,"title":{},"body":{"injectables/UserService.html":{}}}],["bcrypt.hash(obj.password",{"_index":1242,"title":{},"body":{"miscellaneous/variables.html":{}}}],["before",{"_index":914,"title":{},"body":{"contributing.html":{}}}],["behavior",{"_index":978,"title":{},"body":{"contributing.html":{}}}],["behaviors",{"_index":1052,"title":{},"body":{"contributing.html":{}}}],["being",{"_index":984,"title":{},"body":{"contributing.html":{}}}],["benefit",{"_index":786,"title":{},"body":{"changelog.html":{}}}],["best",{"_index":994,"title":{},"body":{"contributing.html":{}}}],["better",{"_index":845,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":848,"title":{},"body":{"changelog.html":{}}}],["body",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{},"contributing.html":{}}}],["bootstrap",{"_index":1130,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["borda",{"_index":276,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["both",{"_index":787,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["br",{"_index":777,"title":{},"body":{"changelog.html":{}}}],["brazilian",{"_index":706,"title":{},"body":{"changelog.html":{}}}],["brits",{"_index":807,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":1185,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1182,"title":{},"body":{"modules.html":{}}}],["bug",{"_index":1208,"title":{},"body":{"todo.html":{}}}],["build",{"_index":923,"title":{},"body":{"contributing.html":{}}}],["calabresa",{"_index":1232,"title":{},"body":{"miscellaneous/variables.html":{}}}],["can’t",{"_index":760,"title":{},"body":{"changelog.html":{}}}],["care",{"_index":869,"title":{},"body":{"changelog.html":{}}}],["catch(handleerror",{"_index":440,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["catupiry",{"_index":278,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["cebola",{"_index":252,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["change",{"_index":732,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["changed",{"_index":728,"title":{},"body":{"changelog.html":{}}}],["changelog",{"_index":653,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changelogs",{"_index":894,"title":{},"body":{"changelog.html":{}}}],["changes",{"_index":655,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["checa",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{}}}],["chinese",{"_index":691,"title":{},"body":{"changelog.html":{}}}],["chronological",{"_index":876,"title":{},"body":{"changelog.html":{}}}],["circumstances",{"_index":1090,"title":{},"body":{"contributing.html":{}}}],["clarified",{"_index":822,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["clarify",{"_index":750,"title":{},"body":{"changelog.html":{}}}],["clarifying",{"_index":1028,"title":{},"body":{"contributing.html":{}}}],["class",{"_index":49,"title":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/Table.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":205,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/Table.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"overview.html":{}}}],["closed",{"_index":788,"title":{},"body":{"changelog.html":{}}}],["cluster_appmodule",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":148,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":149,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":150,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_ordermodule",{"_index":413,"title":{},"body":{"modules/OrderModule.html":{},"overview.html":{}}}],["cluster_ordermodule_imports",{"_index":415,"title":{},"body":{"modules/OrderModule.html":{}}}],["cluster_ordermodule_providers",{"_index":414,"title":{},"body":{"modules/OrderModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":445,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":446,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":447,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_productmodule",{"_index":506,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_productmodule_imports",{"_index":507,"title":{},"body":{"modules/ProductModule.html":{}}}],["cluster_productmodule_providers",{"_index":508,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_tablemodule",{"_index":561,"title":{},"body":{"modules/TableModule.html":{},"overview.html":{}}}],["cluster_tablemodule_imports",{"_index":563,"title":{},"body":{"modules/TableModule.html":{}}}],["cluster_tablemodule_providers",{"_index":562,"title":{},"body":{"modules/TableModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":616,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":618,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":617,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cname",{"_index":885,"title":{},"body":{"changelog.html":{}}}],["code",{"_index":915,"title":{},"body":{"contributing.html":{}}}],["com",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateOrderDto.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["comments",{"_index":1008,"title":{},"body":{"contributing.html":{}}}],["commit",{"_index":754,"title":{},"body":{"changelog.html":{}}}],["commits",{"_index":1042,"title":{},"body":{"contributing.html":{}}}],["common",{"_index":735,"title":{},"body":{"changelog.html":{}}}],["community",{"_index":957,"title":{},"body":{"contributing.html":{}}}],["comparison",{"_index":826,"title":{},"body":{"changelog.html":{}}}],["complaints",{"_index":1084,"title":{},"body":{"contributing.html":{}}}],["conduct",{"_index":916,"title":{},"body":{"contributing.html":{}}}],["confidentiality",{"_index":1093,"title":{},"body":{"contributing.html":{}}}],["confirmação",{"_index":304,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["confirmpassword",{"_index":302,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["connect",{"_index":431,"title":{},"body":{"injectables/OrderService.html":{}}}],["considered",{"_index":1022,"title":{},"body":{"contributing.html":{}}}],["const",{"_index":55,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constructive",{"_index":991,"title":{},"body":{"contributing.html":{}}}],["constructor",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["constructor(prisma",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":50,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["contacting",{"_index":1081,"title":{},"body":{"contributing.html":{}}}],["contained",{"_index":867,"title":{},"body":{"changelog.html":{}}}],["container",{"_index":937,"title":{},"body":{"contributing.html":{}}}],["contains",{"_index":892,"title":{},"body":{"changelog.html":{}}}],["content",{"_index":1198,"title":{},"body":{"todo.html":{}}}],["contributes",{"_index":979,"title":{},"body":{"contributing.html":{}}}],["contributing",{"_index":903,"title":{"contributing.html":{}},"body":{"contributing.html":{}}}],["contributions",{"_index":1046,"title":{},"body":{"contributing.html":{}}}],["contributor",{"_index":1051,"title":{},"body":{"contributing.html":{}}}],["contributors",{"_index":954,"title":{},"body":{"contributing.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('order",{"_index":406,"title":{},"body":{"controllers/OrderController.html":{}}}],["controller('product",{"_index":494,"title":{},"body":{"controllers/ProductController.html":{}}}],["controller('table",{"_index":555,"title":{},"body":{"controllers/TableController.html":{}}}],["controller('user",{"_index":609,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["corrective",{"_index":1034,"title":{},"body":{"contributing.html":{}}}],["correta",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{}}}],["counter",{"_index":902,"title":{},"body":{"changelog.html":{}}}],["covenant",{"_index":1112,"title":{},"body":{"contributing.html":{}}}],["covenant.org/version/1/4",{"_index":1116,"title":{},"body":{"contributing.html":{}}}],["coverage",{"_index":1117,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":240,"title":{},"body":{"classes/CreateOrderDto.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["create(@body",{"_index":495,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["create(@loggeduser",{"_index":407,"title":{},"body":{"controllers/OrderController.html":{}}}],["create(createproductdto",{"_index":475,"title":{},"body":{"controllers/ProductController.html":{}}}],["create(createuserdto",{"_index":598,"title":{},"body":{"controllers/UserController.html":{}}}],["create(dto",{"_index":514,"title":{},"body":{"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["create(user",{"_index":389,"title":{},"body":{"controllers/OrderController.html":{}}}],["create(userid",{"_index":420,"title":{},"body":{"injectables/OrderService.html":{}}}],["createdat",{"_index":372,"title":{},"body":{"classes/Order.html":{},"classes/Product.html":{},"classes/Table.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["createmany",{"_index":433,"title":{},"body":{"injectables/OrderService.html":{}}}],["createorderdto",{"_index":204,"title":{"classes/CreateOrderDto.html":{}},"body":{"classes/CreateOrderDto.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"coverage.html":{}}}],["createorderdto.products.map((createorderproductdto",{"_index":434,"title":{},"body":{"injectables/OrderService.html":{}}}],["createorderdto.tablenumber",{"_index":432,"title":{},"body":{"injectables/OrderService.html":{}}}],["createorderproductdto",{"_index":211,"title":{"classes/CreateOrderProductDto.html":{}},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"coverage.html":{}}}],["createorderproductdto.description",{"_index":437,"title":{},"body":{"injectables/OrderService.html":{}}}],["createorderproductdto.productid",{"_index":435,"title":{},"body":{"injectables/OrderService.html":{}}}],["createorderproductdto.quantity",{"_index":436,"title":{},"body":{"injectables/OrderService.html":{}}}],["createparamdecorator((_",{"_index":1221,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createproductdto",{"_index":266,"title":{"classes/CreateProductDto.html":{}},"body":{"classes/CreateProductDto.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["createtabledto",{"_index":294,"title":{"classes/CreateTableDto.html":{}},"body":{"classes/CreateTableDto.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/UpdateTableDto.html":{},"coverage.html":{}}}],["createuserdto",{"_index":299,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["creating",{"_index":980,"title":{},"body":{"contributing.html":{}}}],["criar",{"_index":391,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["criticism",{"_index":992,"title":{},"body":{"contributing.html":{}}}],["croatian",{"_index":721,"title":{},"body":{"changelog.html":{}}}],["cry",{"_index":747,"title":{},"body":{"changelog.html":{}}}],["ctx",{"_index":1222,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":1224,"title":{},"body":{"miscellaneous/variables.html":{}}}],["current",{"_index":737,"title":{},"body":{"changelog.html":{}}}],["custom",{"_index":889,"title":{},"body":{"changelog.html":{}}}],["czech",{"_index":715,"title":{},"body":{"changelog.html":{}}}],["da",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateOrderDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{}}}],["dados",{"_index":369,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["data",{"_index":429,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["data.password",{"_index":648,"title":{},"body":{"injectables/UserService.html":{}}}],["date",{"_index":375,"title":{},"body":{"classes/Order.html":{},"classes/Product.html":{},"classes/Table.html":{},"classes/User.html":{},"changelog.html":{}}}],["dates",{"_index":810,"title":{},"body":{"changelog.html":{}}}],["de",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["decorators",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["deem",{"_index":1053,"title":{},"body":{"contributing.html":{}}}],["deemed",{"_index":1088,"title":{},"body":{"contributing.html":{}}}],["default",{"_index":631,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":160,"title":{},"body":{"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}}}],["defined",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"contributing.html":{}}}],["delete",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["delete(':id",{"_index":502,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["delete(':id')@httpcode(httpstatus.no_content)@apioperation({summary",{"_index":478,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["delete(@param('id",{"_index":504,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["delete(id",{"_index":477,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dependencies",{"_index":66,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"contributing.html":{},"dependencies.html":{},"overview.html":{}}}],["deprecations",{"_index":749,"title":{},"body":{"changelog.html":{}}}],["description",{"_index":36,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"properties.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["descrição",{"_index":270,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["details",{"_index":928,"title":{},"body":{"contributing.html":{}}}],["determined",{"_index":1107,"title":{},"body":{"contributing.html":{}}}],["deve",{"_index":305,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["developers",{"_index":946,"title":{},"body":{"contributing.html":{}}}],["diff",{"_index":764,"title":{},"body":{"changelog.html":{}}}],["difference",{"_index":847,"title":{},"body":{"changelog.html":{}}}],["differentiate",{"_index":854,"title":{},"body":{"changelog.html":{}}}],["differing",{"_index":986,"title":{},"body":{"contributing.html":{}}}],["diffs",{"_index":755,"title":{},"body":{"changelog.html":{}}}],["disability",{"_index":965,"title":{},"body":{"contributing.html":{}}}],["discuss",{"_index":907,"title":{},"body":{"contributing.html":{}}}],["docs",{"_index":95,"title":{},"body":{"injectables/AppService.html":{}}}],["documentation",{"_index":1118,"title":{},"body":{"coverage.html":{}}}],["documentação",{"_index":31,"title":{},"body":{"controllers/AppController.html":{}}}],["documented",{"_index":657,"title":{},"body":{"changelog.html":{}}}],["doing",{"_index":926,"title":{},"body":{"contributing.html":{}}}],["domain",{"_index":890,"title":{},"body":{"changelog.html":{}}}],["done",{"_index":1215,"title":{},"body":{"todo.html":{}}}],["dos",{"_index":217,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["dto",{"_index":516,"title":{},"body":{"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["dto.confirmpassword",{"_index":639,"title":{},"body":{"injectables/UserService.html":{}}}],["dto.password",{"_index":638,"title":{},"body":{"injectables/UserService.html":{}}}],["dto/create",{"_index":401,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/login",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/login.dto",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/update",{"_index":492,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["e",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"classes/CreateProductDto.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["e/ou",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{}}}],["each",{"_index":243,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["edit",{"_index":1040,"title":{},"body":{"contributing.html":{}}}],["editar",{"_index":487,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["edits",{"_index":1044,"title":{},"body":{"contributing.html":{}}}],["electronic",{"_index":1017,"title":{},"body":{"contributing.html":{}}}],["email",{"_index":911,"title":{},"body":{"contributing.html":{}}}],["empathy",{"_index":996,"title":{},"body":{"contributing.html":{}}}],["empty",{"_index":857,"title":{},"body":{"changelog.html":{}}}],["enable",{"_index":886,"title":{},"body":{"changelog.html":{}}}],["enableshutdownhooks",{"_index":453,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":455,"title":{},"body":{"injectables/PrismaService.html":{}}}],["encontrado",{"_index":529,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["encourage",{"_index":840,"title":{},"body":{"changelog.html":{}}}],["end",{"_index":924,"title":{},"body":{"contributing.html":{}}}],["enforce",{"_index":1101,"title":{},"body":{"contributing.html":{}}}],["enforcement",{"_index":1076,"title":{},"body":{"contributing.html":{}}}],["english",{"_index":738,"title":{},"body":{"changelog.html":{}}}],["ensure",{"_index":921,"title":{},"body":{"contributing.html":{}}}],["entities/product.entity",{"_index":524,"title":{},"body":{"injectables/ProductService.html":{}}}],["entities/table.entity",{"_index":551,"title":{},"body":{"controllers/TableController.html":{},"injectables/TableService.html":{}}}],["entities/user.entity",{"_index":635,"title":{},"body":{"injectables/UserService.html":{}}}],["environment",{"_index":931,"title":{},"body":{"contributing.html":{}}}],["equally",{"_index":790,"title":{},"body":{"changelog.html":{}}}],["error",{"_index":1180,"title":{},"body":{"miscellaneous/functions.html":{}}}],["error.util",{"_index":428,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["error.util.ts",{"_index":1147,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["es",{"_index":779,"title":{},"body":{"changelog.html":{}}}],["est",{"_index":228,"title":{},"body":{"classes/CreateOrderDto.html":{},"injectables/JwtStrategy.html":{}}}],["estão",{"_index":220,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["ethnicity",{"_index":966,"title":{},"body":{"contributing.html":{}}}],["event",{"_index":1074,"title":{},"body":{"contributing.html":{}}}],["everyone",{"_index":961,"title":{},"body":{"contributing.html":{}}}],["evolving",{"_index":883,"title":{},"body":{"changelog.html":{}}}],["example",{"_index":230,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"changelog.html":{},"todo.html":{}}}],["examples",{"_index":896,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["exclusionary",{"_index":783,"title":{},"body":{"changelog.html":{}}}],["executioncontext",{"_index":1223,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exibição",{"_index":315,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["existe",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["expected",{"_index":1030,"title":{},"body":{"contributing.html":{}}}],["experience",{"_index":960,"title":{},"body":{"contributing.html":{}}}],["experiences",{"_index":988,"title":{},"body":{"contributing.html":{}}}],["expiresin",{"_index":166,"title":{},"body":{"modules/AuthModule.html":{}}}],["explanation",{"_index":846,"title":{},"body":{"changelog.html":{}}}],["explicit",{"_index":1020,"title":{},"body":{"contributing.html":{}}}],["export",{"_index":48,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":449,"title":{},"body":{"modules/PrismaModule.html":{}}}],["exposed",{"_index":933,"title":{},"body":{"contributing.html":{}}}],["express",{"_index":38,"title":{},"body":{"controllers/AppController.html":{},"dependencies.html":{}}}],["expression",{"_index":968,"title":{},"body":{"contributing.html":{}}}],["extends",{"_index":347,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{}}}],["extractjwt",{"_index":344,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":351,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjuawnrbmftzsi6inbhdwxvc2fsdmf0b3jliiwiawf0ijoxnjuymjgxnjuwlcjlehaioje2ntiznjgwntb9._otkmkymfz4kgxwamdk5oxbdg6ck6_nxwcrp64iils8",{"_index":367,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["f234138890f3",{"_index":260,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["face",{"_index":1103,"title":{},"body":{"contributing.html":{}}}],["fair",{"_index":1033,"title":{},"body":{"contributing.html":{}}}],["faith",{"_index":1102,"title":{},"body":{"contributing.html":{}}}],["false",{"_index":353,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["feat",{"_index":1203,"title":{},"body":{"todo.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"todo.html":{}}}],["files",{"_index":940,"title":{},"body":{"contributing.html":{}}}],["fina",{"_index":275,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["findall",{"_index":387,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findbyid",{"_index":512,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["findbyid(id",{"_index":519,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["findone",{"_index":388,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findone(@param('id",{"_index":411,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["findone(id",{"_index":397,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["fino",{"_index":273,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["first",{"_index":906,"title":{},"body":{"contributing.html":{},"todo.html":{}}}],["fix",{"_index":765,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["fixed",{"_index":813,"title":{},"body":{"changelog.html":{}}}],["focusing",{"_index":993,"title":{},"body":{"contributing.html":{}}}],["follow",{"_index":917,"title":{},"body":{"contributing.html":{}}}],["following",{"_index":794,"title":{},"body":{"changelog.html":{}}}],["footnote",{"_index":827,"title":{},"body":{"changelog.html":{}}}],["format",{"_index":658,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["formatting",{"_index":901,"title":{},"body":{"changelog.html":{}}}],["fostering",{"_index":952,"title":{},"body":{"contributing.html":{}}}],["fraca",{"_index":334,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["fraca'})@apiproperty({description",{"_index":328,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["frango",{"_index":1233,"title":{},"body":{"miscellaneous/variables.html":{}}}],["free",{"_index":959,"title":{},"body":{"contributing.html":{}}}],["french",{"_index":704,"title":{},"body":{"changelog.html":{}}}],["frequently",{"_index":683,"title":{},"body":{"changelog.html":{}}}],["fresh",{"_index":1181,"title":{},"body":{"index.html":{}}}],["fun",{"_index":806,"title":{},"body":{"changelog.html":{}}}],["function",{"_index":849,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["functions",{"_index":1176,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":756,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["gather",{"_index":839,"title":{},"body":{"changelog.html":{}}}],["gender",{"_index":967,"title":{},"body":{"contributing.html":{}}}],["gerado",{"_index":365,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["german",{"_index":694,"title":{},"body":{"changelog.html":{}}}],["get(':id",{"_index":410,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["get(':id')@apioperation({summary",{"_index":398,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["get()@apioperation({summary",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["get()@useguards(undefined)@apioperation({summary",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{}}}],["getappstatus",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getappstatus(@req",{"_index":54,"title":{},"body":{"controllers/AppController.html":{}}}],["getappstatus(baseurl",{"_index":92,"title":{},"body":{"injectables/AppService.html":{}}}],["getappstatus(req",{"_index":10,"title":{},"body":{"controllers/AppController.html":{}}}],["getting",{"_index":651,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"todo.html":{}},"body":{}}],["git",{"_index":763,"title":{},"body":{"changelog.html":{}}}],["github",{"_index":887,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["good",{"_index":895,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["gracefully",{"_index":989,"title":{},"body":{"contributing.html":{}}}],["guidelines",{"_index":898,"title":{},"body":{"changelog.html":{}}}],["guiding",{"_index":686,"title":{},"body":{"changelog.html":{}}}],["h4vry",{"_index":716,"title":{},"body":{"changelog.html":{}}}],["hameds",{"_index":724,"title":{},"body":{"changelog.html":{}}}],["handleerror",{"_index":426,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["handleerror(error",{"_index":1179,"title":{},"body":{"miscellaneous/functions.html":{}}}],["harassing",{"_index":1078,"title":{},"body":{"contributing.html":{}}}],["harassment",{"_index":958,"title":{},"body":{"contributing.html":{}}}],["harmful",{"_index":1056,"title":{},"body":{"contributing.html":{}}}],["headings",{"_index":838,"title":{},"body":{"changelog.html":{}}}],["help",{"_index":740,"title":{},"body":{"changelog.html":{}}}],["homepage",{"_index":1206,"title":{},"body":{"todo.html":{}}}],["hopefully",{"_index":881,"title":{},"body":{"changelog.html":{}}}],["http://contributor",{"_index":1115,"title":{},"body":{"contributing.html":{}}}],["httpcode",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["httpcode(httpstatus.no_content",{"_index":503,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["httpcode(httpstatus.ok",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{}}}],["https://avatars.githubusercontent.com/u/7906171",{"_index":311,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["https://i.imgur.com/hne75iw.png",{"_index":281,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["httpstatus",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["id",{"_index":255,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["id'})@useguards(undefined)@apibearerauth",{"_index":600,"title":{},"body":{"controllers/UserController.html":{}}}],["ideal",{"_index":751,"title":{},"body":{"changelog.html":{}}}],["identifier",{"_index":1119,"title":{},"body":{"coverage.html":{}}}],["identity",{"_index":671,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["ids",{"_index":216,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["ignoreexpiration",{"_index":352,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["ignoring",{"_index":748,"title":{},"body":{"changelog.html":{}}}],["iguais",{"_index":644,"title":{},"body":{"injectables/UserService.html":{}}}],["igual",{"_index":307,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["image",{"_index":268,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["imagem",{"_index":280,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{}}}],["imagery",{"_index":1002,"title":{},"body":{"contributing.html":{}}}],["implements",{"_index":460,"title":{},"body":{"injectables/PrismaService.html":{}}}],["import",{"_index":40,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}}}],["improve",{"_index":753,"title":{},"body":{"changelog.html":{}}}],["inappropriate",{"_index":1023,"title":{},"body":{"contributing.html":{}}}],["incident",{"_index":1096,"title":{},"body":{"contributing.html":{}}}],["include",{"_index":444,"title":{},"body":{"injectables/OrderService.html":{},"contributing.html":{}}}],["includes",{"_index":930,"title":{},"body":{"contributing.html":{}}}],["including",{"_index":899,"title":{},"body":{"changelog.html":{}}}],["inclusive",{"_index":982,"title":{},"body":{"contributing.html":{}}}],["increase",{"_index":938,"title":{},"body":{"contributing.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["individual",{"_index":1061,"title":{},"body":{"contributing.html":{}}}],["inestapplication",{"_index":456,"title":{},"body":{"injectables/PrismaService.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["informada",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{}}}],["informadas",{"_index":642,"title":{},"body":{"injectables/UserService.html":{}}}],["information",{"_index":1014,"title":{},"body":{"contributing.html":{}}}],["injectable",{"_index":89,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":90,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["insert",{"_index":1083,"title":{},"body":{"contributing.html":{}}}],["install",{"_index":922,"title":{},"body":{"contributing.html":{}}}],["instances",{"_index":1037,"title":{},"body":{"contributing.html":{}}}],["instead",{"_index":851,"title":{},"body":{"changelog.html":{}}}],["insulting/derogatory",{"_index":1007,"title":{},"body":{"contributing.html":{}}}],["intentionally",{"_index":865,"title":{},"body":{"changelog.html":{}}}],["interactions",{"_index":918,"title":{},"body":{"contributing.html":{}}}],["interest",{"_index":951,"title":{},"body":{"contributing.html":{}}}],["interface",{"_index":929,"title":{},"body":{"contributing.html":{}}}],["investigated",{"_index":1086,"title":{},"body":{"contributing.html":{}}}],["inválidos",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{}}}],["ishashvalid",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{}}}],["isint",{"_index":235,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{}}}],["isint()@ispositive()@apiproperty({description",{"_index":225,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{}}}],["isnotempty",{"_index":362,"title":{},"body":{"classes/LoginDto.html":{}}}],["isnumber",{"_index":290,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{}}}],["isnumber()@ispositive()@apiproperty({description",{"_index":297,"title":{},"body":{"classes/CreateTableDto.html":{}}}],["isnumber({maxdecimalplaces",{"_index":285,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["iso",{"_index":820,"title":{},"body":{"changelog.html":{}}}],["ispositive",{"_index":236,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateTableDto.html":{}}}],["isstring",{"_index":265,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["isstring()@apiproperty({description",{"_index":248,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{}}}],["isstring()@isnotempty()@apiproperty({description",{"_index":359,"title":{},"body":{"classes/LoginDto.html":{}}}],["isstring()@minlength(6)@matches(/((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":323,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["issue",{"_index":910,"title":{},"body":{"contributing.html":{}}}],["issues",{"_index":1045,"title":{},"body":{"contributing.html":{}}}],["isurl",{"_index":291,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{}}}],["isurl()@apiproperty({description",{"_index":279,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{}}}],["isuuid",{"_index":237,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{}}}],["isuuid()@apiproperty({description",{"_index":254,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["it's",{"_index":734,"title":{},"body":{"changelog.html":{}}}],["italian",{"_index":698,"title":{},"body":{"changelog.html":{}}}],["itens",{"_index":263,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["jane",{"_index":1209,"title":{},"body":{"todo.html":{}}}],["jira",{"_index":1213,"title":{},"body":{"todo.html":{}}}],["jkostolansky",{"_index":718,"title":{},"body":{"changelog.html":{}}}],["john",{"_index":1204,"title":{},"body":{"todo.html":{}}}],["jwt",{"_index":161,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponseDto.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":158,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtfromrequest",{"_index":350,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":155,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":162,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":151,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["karalamalar",{"_index":703,"title":{},"body":{"changelog.html":{}}}],["keep",{"_index":660,"title":{},"body":{"changelog.html":{}}}],["keeping",{"_index":842,"title":{},"body":{"changelog.html":{}}}],["korean",{"_index":719,"title":{},"body":{"changelog.html":{}}}],["language",{"_index":983,"title":{},"body":{"contributing.html":{}}}],["latest",{"_index":676,"title":{},"body":{"changelog.html":{}}}],["layer",{"_index":925,"title":{},"body":{"contributing.html":{}}}],["leadership",{"_index":1109,"title":{},"body":{"contributing.html":{}}}],["left",{"_index":866,"title":{},"body":{"changelog.html":{}}}],["level",{"_index":969,"title":{},"body":{"contributing.html":{}}}],["license",{"_index":1191,"title":{},"body":{"properties.html":{}}}],["link",{"_index":816,"title":{},"body":{"changelog.html":{}}}],["links",{"_index":675,"title":{},"body":{"changelog.html":{}}}],["lista",{"_index":214,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["listar",{"_index":393,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["literal",{"_index":339,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["local",{"_index":1164,"title":{},"body":{"dependencies.html":{}}}],["locations",{"_index":936,"title":{},"body":{"contributing.html":{}}}],["log",{"_index":733,"title":{},"body":{"changelog.html":{}}}],["logged",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{}}}],["loggeduser",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logging",{"_index":856,"title":{},"body":{"changelog.html":{}}}],["login",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginResponseDto.html":{}}}],["login(@body",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(logindto",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logindto",{"_index":106,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["loginresponsedto",{"_index":133,"title":{"classes/LoginResponseDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginResponseDto.html":{},"coverage.html":{}}}],["logs",{"_index":793,"title":{},"body":{"changelog.html":{}}}],["m",{"_index":711,"title":{},"body":{"changelog.html":{}}}],["magol",{"_index":701,"title":{},"body":{"changelog.html":{}}}],["mail",{"_index":1064,"title":{},"body":{"contributing.html":{}}}],["maintain",{"_index":1092,"title":{},"body":{"contributing.html":{}}}],["maintainers",{"_index":955,"title":{},"body":{"contributing.html":{}}}],["make",{"_index":682,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["makes",{"_index":745,"title":{},"body":{"changelog.html":{}}}],["making",{"_index":805,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["markdown",{"_index":824,"title":{},"body":{"changelog.html":{}}}],["massa",{"_index":274,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["match",{"_index":801,"title":{},"body":{"changelog.html":{}}}],["matches",{"_index":330,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matches(/((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":333,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matching",{"_index":62,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["maxdecimalplaces",{"_index":292,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["media",{"_index":1067,"title":{},"body":{"contributing.html":{}}}],["members",{"_index":998,"title":{},"body":{"contributing.html":{}}}],["mentioning",{"_index":870,"title":{},"body":{"changelog.html":{}}}],["mentions",{"_index":784,"title":{},"body":{"changelog.html":{}}}],["merge",{"_index":759,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["mesa",{"_index":227,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateTableDto.html":{},"controllers/TableController.html":{}}}],["mesas",{"_index":545,"title":{},"body":{"controllers/TableController.html":{}}}],["message",{"_index":326,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["metadata",{"_index":1166,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":912,"title":{},"body":{"contributing.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["minlength",{"_index":331,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minlength(6",{"_index":332,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["miscellaneous",{"_index":1175,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":864,"title":{},"body":{"changelog.html":{}}}],["module",{"_index":63,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}}}],["modules",{"_index":65,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["momento",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{}}}],["momento'})@apibearerauth",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{}}}],["mpbzh",{"_index":696,"title":{},"body":{"changelog.html":{}}}],["much",{"_index":860,"title":{},"body":{"changelog.html":{}}}],["muito",{"_index":327,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["mussarela",{"_index":272,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["name",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["nationality",{"_index":970,"title":{},"body":{"contributing.html":{}}}],["navigation",{"_index":674,"title":{},"body":{"changelog.html":{}}}],["necessary",{"_index":1089,"title":{},"body":{"contributing.html":{}}}],["needs",{"_index":681,"title":{},"body":{"changelog.html":{}}}],["nestjs/common",{"_index":41,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1151,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":156,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":1152,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1156,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":44,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["new",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["nickname",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["nico",{"_index":320,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["noise",{"_index":862,"title":{},"body":{"changelog.html":{}}}],["nome",{"_index":283,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{}}}],["notable",{"_index":654,"title":{},"body":{"changelog.html":{}}}],["note",{"_index":841,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["notfoundexception",{"_index":523,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["notfoundexception(`registro",{"_index":528,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["now",{"_index":891,"title":{},"body":{"changelog.html":{}}}],["number",{"_index":224,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"classes/Table.html":{},"miscellaneous/variables.html":{}}}],["numbers",{"_index":939,"title":{},"body":{"contributing.html":{}}}],["não",{"_index":356,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["número",{"_index":226,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateTableDto.html":{}}}],["o",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateTableDto.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["obj",{"_index":1227,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obj.name",{"_index":1230,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obj.nickname",{"_index":1241,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obj.number",{"_index":1236,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object",{"_index":630,"title":{},"body":{"injectables/UserService.html":{}}}],["object.entries(seed",{"_index":1226,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.values(products",{"_index":1228,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.values(tables",{"_index":1234,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.values(users",{"_index":1239,"title":{},"body":{"miscellaneous/variables.html":{}}}],["objeto",{"_index":27,"title":{},"body":{"controllers/AppController.html":{}}}],["obligated",{"_index":1091,"title":{},"body":{"contributing.html":{}}}],["observações",{"_index":249,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["obvious",{"_index":819,"title":{},"body":{"changelog.html":{}}}],["occupy",{"_index":859,"title":{},"body":{"changelog.html":{}}}],["offensive",{"_index":1055,"title":{},"body":{"contributing.html":{}}}],["official",{"_index":1063,"title":{},"body":{"contributing.html":{}}}],["offline",{"_index":1073,"title":{},"body":{"contributing.html":{}}}],["once",{"_index":943,"title":{},"body":{"contributing.html":{}}}],["online",{"_index":1072,"title":{},"body":{"contributing.html":{}}}],["onmoduleinit",{"_index":454,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":785,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["optional",{"_index":35,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["order",{"_index":241,"title":{"classes/Order.html":{}},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"coverage.html":{}}}],["order.controller",{"_index":417,"title":{},"body":{"modules/OrderModule.html":{}}}],["order.dto",{"_index":402,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["order.dto.ts",{"_index":207,"title":{},"body":{"classes/CreateOrderDto.html":{},"coverage.html":{}}}],["order.dto.ts:13",{"_index":232,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["order.dto.ts:23",{"_index":223,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["order.service",{"_index":404,"title":{},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{}}}],["order/order.module",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["ordercontroller",{"_index":385,"title":{"controllers/OrderController.html":{}},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{},"coverage.html":{}}}],["ordering",{"_index":877,"title":{},"body":{"changelog.html":{}}}],["ordermodule",{"_index":71,"title":{"modules/OrderModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OrderModule.html":{},"modules.html":{},"overview.html":{}}}],["orderservice",{"_index":403,"title":{"injectables/OrderService.html":{}},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"coverage.html":{},"overview.html":{}}}],["orientation",{"_index":976,"title":{},"body":{"contributing.html":{}}}],["os",{"_index":215,"title":{},"body":{"classes/CreateOrderDto.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["osadchyi",{"_index":726,"title":{},"body":{"changelog.html":{}}}],["others",{"_index":1013,"title":{},"body":{"contributing.html":{}}}],["otherwise",{"_index":1079,"title":{},"body":{"contributing.html":{}}}],["ou",{"_index":357,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["out",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"changelog.html":{},"overview.html":{}}}],["outdated",{"_index":815,"title":{},"body":{"changelog.html":{}}}],["over",{"_index":731,"title":{},"body":{"changelog.html":{}}}],["overview",{"_index":1186,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owners",{"_index":913,"title":{},"body":{"contributing.html":{}}}],["package",{"_index":1149,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["pages",{"_index":888,"title":{},"body":{"changelog.html":{}}}],["para",{"_index":314,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["param",{"_index":52,"title":{},"body":{"controllers/AppController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["parameters",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"contributing.html":{},"miscellaneous/functions.html":{}}}],["partial",{"_index":532,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["partialtype",{"_index":580,"title":{},"body":{"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{}}}],["partialtype(createproductdto",{"_index":581,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["partialtype(createtabledto",{"_index":583,"title":{},"body":{"classes/UpdateTableDto.html":{}}}],["partialtype(createuserdto",{"_index":587,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["participants",{"_index":1000,"title":{},"body":{"contributing.html":{}}}],["participation",{"_index":956,"title":{},"body":{"contributing.html":{}}}],["passport",{"_index":346,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":157,"title":{},"body":{"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}}}],["passportmodule.register",{"_index":159,"title":{},"body":{"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}}}],["passportstrategy",{"_index":343,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":348,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["patch",{"_index":489,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["patch(':id",{"_index":499,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["patch(':id')@apioperation({summary",{"_index":486,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["paulo",{"_index":316,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["paulosalvatore",{"_index":321,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"miscellaneous/variables.html":{}}}],["payload",{"_index":341,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.nickname",{"_index":355,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["pedido",{"_index":221,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"controllers/OrderController.html":{}}}],["pedidos",{"_index":395,"title":{},"body":{"controllers/OrderController.html":{}}}],["pelo",{"_index":366,"title":{},"body":{"classes/LoginResponseDto.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["people",{"_index":761,"title":{},"body":{"changelog.html":{}}}],["perfil",{"_index":310,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["permanent",{"_index":1105,"title":{},"body":{"contributing.html":{}}}],["permanently",{"_index":1050,"title":{},"body":{"contributing.html":{}}}],["permission",{"_index":947,"title":{},"body":{"contributing.html":{}}}],["persian",{"_index":723,"title":{},"body":{"changelog.html":{}}}],["personal",{"_index":971,"title":{},"body":{"contributing.html":{}}}],["phrasing",{"_index":768,"title":{},"body":{"changelog.html":{}}}],["physical",{"_index":1016,"title":{},"body":{"contributing.html":{}}}],["pierceh89",{"_index":720,"title":{},"body":{"changelog.html":{}}}],["pizza",{"_index":284,"title":{},"body":{"classes/CreateProductDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["please",{"_index":905,"title":{},"body":{"contributing.html":{}}}],["pledge",{"_index":950,"title":{},"body":{"contributing.html":{}}}],["podcast",{"_index":871,"title":{},"body":{"changelog.html":{}}}],["policies",{"_index":1098,"title":{},"body":{"contributing.html":{}}}],["polish",{"_index":709,"title":{},"body":{"changelog.html":{}}}],["political",{"_index":1009,"title":{},"body":{"contributing.html":{}}}],["ports",{"_index":934,"title":{},"body":{"contributing.html":{}}}],["portugese",{"_index":707,"title":{},"body":{"changelog.html":{}}}],["portuguese",{"_index":767,"title":{},"body":{"changelog.html":{}}}],["porx",{"_index":722,"title":{},"body":{"changelog.html":{}}}],["positive",{"_index":981,"title":{},"body":{"contributing.html":{}}}],["post",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["post()@apioperation({summary",{"_index":390,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["post()@httpcode(httpstatus.ok)@apioperation({summary",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{}}}],["posted",{"_index":1099,"title":{},"body":{"contributing.html":{}}}],["posting",{"_index":1065,"title":{},"body":{"contributing.html":{}}}],["prefix",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["previous",{"_index":678,"title":{},"body":{"changelog.html":{}}}],["preço",{"_index":287,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["price",{"_index":269,"title":{},"body":{"classes/CreateProductDto.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"miscellaneous/variables.html":{}}}],["principles",{"_index":687,"title":{},"body":{"changelog.html":{}}}],["prior",{"_index":843,"title":{},"body":{"changelog.html":{}}}],["prisma",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["prisma.ordercreateinput",{"_index":430,"title":{},"body":{"injectables/OrderService.html":{}}}],["prisma.product.upsert",{"_index":1229,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prisma.productcreateinput",{"_index":1231,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prisma.service",{"_index":450,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma.table.upsert",{"_index":1235,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prisma.tablecreateinput",{"_index":1237,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prisma.user.upsert",{"_index":1240,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prisma.usercreateinput",{"_index":1243,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prisma/client",{"_index":425,"title":{},"body":{"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"dependencies.html":{}}}],["prisma/prisma.module",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["prismaclient",{"_index":452,"title":{},"body":{"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["prismamodule",{"_index":72,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":172,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"contributing.html":{}}}],["process",{"_index":920,"title":{},"body":{"contributing.html":{}}}],["process.env.jwt_secret",{"_index":164,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["procura",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{}}}],["product",{"_index":378,"title":{"classes/Product.html":{}},"body":{"classes/Order.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["product.controller",{"_index":510,"title":{},"body":{"modules/ProductModule.html":{}}}],["product.dto",{"_index":242,"title":{},"body":{"classes/CreateOrderDto.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{}}}],["product.dto.ts",{"_index":245,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["product.dto.ts:10",{"_index":261,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{}}}],["product.dto.ts:18",{"_index":264,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{}}}],["product.dto.ts:25",{"_index":253,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["product.dto.ts:27",{"_index":289,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:34",{"_index":282,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.service",{"_index":491,"title":{},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{}}}],["product.ts",{"_index":1140,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["product/product.module",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["productcontroller",{"_index":472,"title":{"controllers/ProductController.html":{}},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{},"coverage.html":{}}}],["productid",{"_index":246,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"injectables/OrderService.html":{}}}],["productmodule",{"_index":73,"title":{"modules/ProductModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductModule.html":{},"modules.html":{},"overview.html":{}}}],["products",{"_index":209,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/Order.html":{},"injectables/OrderService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["productservice",{"_index":490,"title":{"injectables/ProductService.html":{}},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"coverage.html":{},"overview.html":{}}}],["produto",{"_index":250,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"controllers/ProductController.html":{}}}],["produtos",{"_index":218,"title":{},"body":{"classes/CreateOrderDto.html":{},"controllers/ProductController.html":{}}}],["professional",{"_index":1024,"title":{},"body":{"contributing.html":{}}}],["profile",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(@loggeduser",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(user",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{}}}],["progress",{"_index":1211,"title":{},"body":{"todo.html":{}}}],["project",{"_index":656,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["project's",{"_index":1108,"title":{},"body":{"contributing.html":{}}}],["projects",{"_index":789,"title":{},"body":{"changelog.html":{}}}],["promise",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["proper",{"_index":900,"title":{},"body":{"changelog.html":{}}}],["properly",{"_index":796,"title":{},"body":{"changelog.html":{}}}],["properties",{"_index":208,"title":{"properties.html":{}},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/Table.html":{},"classes/User.html":{},"injectables/UserService.html":{},"properties.html":{}}}],["providers",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}}}],["pt",{"_index":776,"title":{},"body":{"changelog.html":{}}}],["public",{"_index":1011,"title":{},"body":{"contributing.html":{}}}],["publishing",{"_index":1012,"title":{},"body":{"contributing.html":{}}}],["pull",{"_index":919,"title":{},"body":{"contributing.html":{}}}],["purpose",{"_index":855,"title":{},"body":{"changelog.html":{}}}],["quantidade",{"_index":262,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["quantity",{"_index":247,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"injectables/OrderService.html":{}}}],["que",{"_index":219,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["queijo",{"_index":271,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["questions",{"_index":685,"title":{},"body":{"changelog.html":{}}}],["race",{"_index":973,"title":{},"body":{"contributing.html":{}}}],["raw",{"_index":1197,"title":{},"body":{"todo.html":{}}}],["readme",{"_index":802,"title":{},"body":{"changelog.html":{}}}],["readme.md",{"_index":927,"title":{},"body":{"contributing.html":{}}}],["readonly",{"_index":51,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["realizando",{"_index":229,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["realizar",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{}}}],["reasonably",{"_index":1021,"title":{},"body":{"contributing.html":{}}}],["recebe",{"_index":21,"title":{},"body":{"controllers/AppController.html":{}}}],["recebendo",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{}}}],["recent",{"_index":814,"title":{},"body":{"changelog.html":{}}}],["recheada",{"_index":277,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["recommended",{"_index":874,"title":{},"body":{"changelog.html":{}}}],["record",{"_index":526,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["refer",{"_index":850,"title":{},"body":{"changelog.html":{}}}],["reflect",{"_index":1165,"title":{},"body":{"dependencies.html":{}}}],["regard",{"_index":1094,"title":{},"body":{"contributing.html":{}}}],["regardless",{"_index":962,"title":{},"body":{"contributing.html":{}}}],["reject",{"_index":1041,"title":{},"body":{"contributing.html":{}}}],["release",{"_index":837,"title":{},"body":{"changelog.html":{}}}],["released",{"_index":677,"title":{},"body":{"changelog.html":{}}}],["releases",{"_index":832,"title":{},"body":{"changelog.html":{}}}],["religion",{"_index":974,"title":{},"body":{"contributing.html":{}}}],["reluctantly",{"_index":803,"title":{},"body":{"changelog.html":{}}}],["remove",{"_index":782,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["removed",{"_index":770,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["remover",{"_index":479,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["repercussions",{"_index":1106,"title":{},"body":{"contributing.html":{}}}],["repo",{"_index":1212,"title":{},"body":{"todo.html":{}}}],["reported",{"_index":1080,"title":{},"body":{"contributing.html":{}}}],["reporter",{"_index":1095,"title":{},"body":{"contributing.html":{}}}],["repository",{"_index":904,"title":{},"body":{"contributing.html":{}}}],["represent",{"_index":941,"title":{},"body":{"contributing.html":{}}}],["representation",{"_index":1075,"title":{},"body":{"contributing.html":{}}}],["representative",{"_index":1071,"title":{},"body":{"contributing.html":{}}}],["representing",{"_index":1062,"title":{},"body":{"contributing.html":{}}}],["req",{"_index":37,"title":{},"body":{"controllers/AppController.html":{}}}],["req.get('host",{"_index":58,"title":{},"body":{"controllers/AppController.html":{}}}],["req.protocol",{"_index":57,"title":{},"body":{"controllers/AppController.html":{}}}],["request",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["request.user",{"_index":1225,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requisição",{"_index":23,"title":{},"body":{"controllers/AppController.html":{}}}],["reset",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["respectful",{"_index":985,"title":{},"body":{"contributing.html":{}}}],["response",{"_index":1036,"title":{},"body":{"contributing.html":{}}}],["response.dto",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["response.dto.ts",{"_index":364,"title":{},"body":{"classes/LoginResponseDto.html":{},"coverage.html":{}}}],["response.dto.ts:10",{"_index":368,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["response.dto.ts:15",{"_index":370,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["responsibilities",{"_index":1026,"title":{},"body":{"contributing.html":{}}}],["responsibility",{"_index":1039,"title":{},"body":{"contributing.html":{}}}],["responsible",{"_index":1027,"title":{},"body":{"contributing.html":{}}}],["result",{"_index":1087,"title":{},"body":{"contributing.html":{}}}],["results",{"_index":61,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["retorna",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{}}}],["return",{"_index":59,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":39,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["reverse",{"_index":875,"title":{},"body":{"changelog.html":{}}}],["reviewed",{"_index":1085,"title":{},"body":{"contributing.html":{}}}],["reviewer",{"_index":949,"title":{},"body":{"contributing.html":{}}}],["rewrite",{"_index":744,"title":{},"body":{"changelog.html":{}}}],["right",{"_index":1038,"title":{},"body":{"contributing.html":{}}}],["rimraf",{"_index":1168,"title":{},"body":{"dependencies.html":{}}}],["ru",{"_index":775,"title":{},"body":{"changelog.html":{}}}],["running",{"_index":97,"title":{},"body":{"injectables/AppService.html":{}}}],["russian",{"_index":713,"title":{},"body":{"changelog.html":{}}}],["rxjs",{"_index":1170,"title":{},"body":{"dependencies.html":{}}}],["s",{"_index":727,"title":{},"body":{"changelog.html":{}}}],["salvatore",{"_index":317,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["scenario",{"_index":752,"title":{},"body":{"changelog.html":{}}}],["scheme",{"_index":942,"title":{},"body":{"contributing.html":{}}}],["scope",{"_index":1057,"title":{},"body":{"contributing.html":{}}}],["se",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{}}}],["second",{"_index":948,"title":{},"body":{"contributing.html":{}}}],["secret",{"_index":163,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":354,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["section",{"_index":680,"title":{},"body":{"changelog.html":{}}}],["sections",{"_index":858,"title":{},"body":{"changelog.html":{}}}],["seeds",{"_index":1135,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["select",{"_index":439,"title":{},"body":{"injectables/OrderService.html":{},"injectables/UserService.html":{}}}],["sem",{"_index":251,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["semantic",{"_index":662,"title":{},"body":{"changelog.html":{}}}],["semver",{"_index":795,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["senha",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["senhas",{"_index":641,"title":{},"body":{"injectables/UserService.html":{}}}],["separately",{"_index":1100,"title":{},"body":{"contributing.html":{}}}],["ser",{"_index":306,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["serve",{"_index":882,"title":{},"body":{"changelog.html":{}}}],["server",{"_index":96,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["setting",{"_index":1025,"title":{},"body":{"contributing.html":{}}}],["sexual",{"_index":975,"title":{},"body":{"contributing.html":{}}}],["sexualized",{"_index":1001,"title":{},"body":{"contributing.html":{}}}],["showing",{"_index":995,"title":{},"body":{"contributing.html":{}}}],["sign",{"_index":944,"title":{},"body":{"contributing.html":{}}}],["signoptions",{"_index":165,"title":{},"body":{"modules/AuthModule.html":{}}}],["simplified",{"_index":689,"title":{},"body":{"changelog.html":{}}}],["site",{"_index":853,"title":{},"body":{"changelog.html":{}}}],["size",{"_index":964,"title":{},"body":{"contributing.html":{}}}],["slovak",{"_index":717,"title":{},"body":{"changelog.html":{}}}],["social",{"_index":1066,"title":{},"body":{"contributing.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"changelog.html":{}}}],["space",{"_index":861,"title":{},"body":{"changelog.html":{}}}],["spaces",{"_index":1060,"title":{},"body":{"contributing.html":{}}}],["specific",{"_index":1097,"title":{},"body":{"contributing.html":{}}}],["spelling",{"_index":769,"title":{},"body":{"changelog.html":{}}}],["src/.../01",{"_index":1220,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../02",{"_index":1218,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../03",{"_index":1219,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../handle",{"_index":1178,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../logged",{"_index":1216,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1177,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../seed.ts",{"_index":1217,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:21",{"_index":20,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":91,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":94,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:28",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:38",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":152,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:15",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:9",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/login",{"_index":363,"title":{},"body":{"classes/LoginResponseDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts",{"_index":358,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts:11",{"_index":360,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/login.dto.ts:19",{"_index":361,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":335,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:16",{"_index":340,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:7",{"_index":337,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/logged",{"_index":400,"title":{},"body":{"controllers/OrderController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":1129,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/order/dto/create",{"_index":206,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"coverage.html":{}}}],["src/order/entities/order.entity.ts",{"_index":371,"title":{},"body":{"classes/Order.html":{},"coverage.html":{}}}],["src/order/entities/order.entity.ts:10",{"_index":381,"title":{},"body":{"classes/Order.html":{}}}],["src/order/entities/order.entity.ts:11",{"_index":379,"title":{},"body":{"classes/Order.html":{}}}],["src/order/entities/order.entity.ts:6",{"_index":377,"title":{},"body":{"classes/Order.html":{}}}],["src/order/entities/order.entity.ts:7",{"_index":382,"title":{},"body":{"classes/Order.html":{}}}],["src/order/entities/order.entity.ts:8",{"_index":380,"title":{},"body":{"classes/Order.html":{}}}],["src/order/entities/order.entity.ts:9",{"_index":376,"title":{},"body":{"classes/Order.html":{}}}],["src/order/order.controller.ts",{"_index":386,"title":{},"body":{"controllers/OrderController.html":{},"coverage.html":{}}}],["src/order/order.controller.ts:20",{"_index":392,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.controller.ts:28",{"_index":396,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.controller.ts:36",{"_index":399,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.module.ts",{"_index":416,"title":{},"body":{"modules/OrderModule.html":{}}}],["src/order/order.service.ts",{"_index":418,"title":{},"body":{"injectables/OrderService.html":{},"coverage.html":{}}}],["src/order/order.service.ts:11",{"_index":421,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:65",{"_index":423,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:8",{"_index":419,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:88",{"_index":424,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/prisma/prisma.module",{"_index":154,"title":{},"body":{"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}}}],["src/prisma/prisma.module.ts",{"_index":448,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["src/prisma/prisma.service.ts",{"_index":451,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:10",{"_index":457,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:6",{"_index":459,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/seed.ts",{"_index":1134,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/prisma/seed/01",{"_index":1136,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/prisma/seed/02",{"_index":1139,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/prisma/seed/03",{"_index":1141,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/product/dto/create",{"_index":267,"title":{},"body":{"classes/CreateProductDto.html":{},"coverage.html":{}}}],["src/product/dto/update",{"_index":579,"title":{},"body":{"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["src/product/entities/product.entity",{"_index":383,"title":{},"body":{"classes/Order.html":{}}}],["src/product/entities/product.entity.ts",{"_index":464,"title":{},"body":{"classes/Product.html":{},"coverage.html":{}}}],["src/product/entities/product.entity.ts:2",{"_index":467,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:3",{"_index":469,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:4",{"_index":466,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:5",{"_index":470,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:6",{"_index":468,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:7",{"_index":465,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:8",{"_index":471,"title":{},"body":{"classes/Product.html":{}}}],["src/product/product.controller.ts",{"_index":473,"title":{},"body":{"controllers/ProductController.html":{},"coverage.html":{}}}],["src/product/product.controller.ts:30",{"_index":476,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:38",{"_index":482,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:46",{"_index":483,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:54",{"_index":488,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:63",{"_index":480,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.module.ts",{"_index":509,"title":{},"body":{"modules/ProductModule.html":{}}}],["src/product/product.service.ts",{"_index":511,"title":{},"body":{"injectables/ProductService.html":{},"coverage.html":{}}}],["src/product/product.service.ts:12",{"_index":518,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:16",{"_index":520,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:26",{"_index":521,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:30",{"_index":515,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:36",{"_index":522,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:49",{"_index":517,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:9",{"_index":513,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/table/dto/create",{"_index":295,"title":{},"body":{"classes/CreateTableDto.html":{},"coverage.html":{}}}],["src/table/dto/update",{"_index":582,"title":{},"body":{"classes/UpdateTableDto.html":{},"coverage.html":{}}}],["src/table/entities/table.entity",{"_index":384,"title":{},"body":{"classes/Order.html":{}}}],["src/table/entities/table.entity.ts",{"_index":535,"title":{},"body":{"classes/Table.html":{},"coverage.html":{}}}],["src/table/entities/table.entity.ts:2",{"_index":537,"title":{},"body":{"classes/Table.html":{}}}],["src/table/entities/table.entity.ts:3",{"_index":538,"title":{},"body":{"classes/Table.html":{}}}],["src/table/entities/table.entity.ts:4",{"_index":536,"title":{},"body":{"classes/Table.html":{}}}],["src/table/entities/table.entity.ts:5",{"_index":539,"title":{},"body":{"classes/Table.html":{}}}],["src/table/table.controller.ts",{"_index":541,"title":{},"body":{"controllers/TableController.html":{},"coverage.html":{}}}],["src/table/table.controller.ts:31",{"_index":546,"title":{},"body":{"controllers/TableController.html":{}}}],["src/table/table.controller.ts:39",{"_index":547,"title":{},"body":{"controllers/TableController.html":{}}}],["src/table/table.controller.ts:47",{"_index":542,"title":{},"body":{"controllers/TableController.html":{}}}],["src/table/table.controller.ts:55",{"_index":549,"title":{},"body":{"controllers/TableController.html":{}}}],["src/table/table.controller.ts:64",{"_index":543,"title":{},"body":{"controllers/TableController.html":{}}}],["src/table/table.module.ts",{"_index":564,"title":{},"body":{"modules/TableModule.html":{}}}],["src/table/table.service.ts",{"_index":566,"title":{},"body":{"injectables/TableService.html":{},"coverage.html":{}}}],["src/table/table.service.ts:12",{"_index":570,"title":{},"body":{"injectables/TableService.html":{}}}],["src/table/table.service.ts:16",{"_index":571,"title":{},"body":{"injectables/TableService.html":{}}}],["src/table/table.service.ts:26",{"_index":572,"title":{},"body":{"injectables/TableService.html":{}}}],["src/table/table.service.ts:30",{"_index":568,"title":{},"body":{"injectables/TableService.html":{}}}],["src/table/table.service.ts:36",{"_index":573,"title":{},"body":{"injectables/TableService.html":{}}}],["src/table/table.service.ts:49",{"_index":569,"title":{},"body":{"injectables/TableService.html":{}}}],["src/table/table.service.ts:9",{"_index":567,"title":{},"body":{"injectables/TableService.html":{}}}],["src/user/dto/create",{"_index":300,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/user/dto/update",{"_index":585,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/user/entities/user.entity",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{}}}],["src/user/entities/user.entity.ts",{"_index":588,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/user/entities/user.entity.ts:2",{"_index":590,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:3",{"_index":593,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:4",{"_index":592,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:5",{"_index":594,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:6",{"_index":591,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:7",{"_index":589,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:8",{"_index":595,"title":{},"body":{"classes/User.html":{}}}],["src/user/user.controller.ts",{"_index":597,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:28",{"_index":599,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:38",{"_index":603,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:48",{"_index":604,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:58",{"_index":605,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:69",{"_index":601,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.module.ts",{"_index":619,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service.ts",{"_index":621,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:15",{"_index":633,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:23",{"_index":623,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:27",{"_index":626,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:33",{"_index":627,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:46",{"_index":628,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:50",{"_index":624,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:70",{"_index":629,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:96",{"_index":625,"title":{},"body":{"injectables/UserService.html":{}}}],["src/utils/handle",{"_index":427,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["standard",{"_index":823,"title":{},"body":{"changelog.html":{}}}],["standardized",{"_index":884,"title":{},"body":{"changelog.html":{}}}],["standards",{"_index":977,"title":{},"body":{"contributing.html":{}}}],["start",{"_index":729,"title":{},"body":{"changelog.html":{}}}],["started",{"_index":652,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"todo.html":{}},"body":{}}],["statements",{"_index":1120,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["stop",{"_index":804,"title":{},"body":{"changelog.html":{}}}],["strange",{"_index":811,"title":{},"body":{"changelog.html":{}}}],["strategy",{"_index":345,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":93,"title":{},"body":{"injectables/AppService.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["style",{"_index":828,"title":{},"body":{"changelog.html":{}}}],["sub",{"_index":688,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["such",{"_index":1015,"title":{},"body":{"contributing.html":{}}}],["summary",{"_index":53,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["super",{"_index":349,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["support",{"_index":1183,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1184,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1172,"title":{},"body":{"dependencies.html":{}}}],["swedish",{"_index":700,"title":{},"body":{"changelog.html":{}}}],["são",{"_index":643,"title":{},"body":{"injectables/UserService.html":{}}}],["table",{"_index":373,"title":{"classes/Table.html":{}},"body":{"classes/Order.html":{},"injectables/OrderService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["table.controller",{"_index":565,"title":{},"body":{"modules/TableModule.html":{}}}],["table.dto",{"_index":550,"title":{},"body":{"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/UpdateTableDto.html":{}}}],["table.dto.ts",{"_index":296,"title":{},"body":{"classes/CreateTableDto.html":{},"classes/UpdateTableDto.html":{},"coverage.html":{}}}],["table.dto.ts:11",{"_index":298,"title":{},"body":{"classes/CreateTableDto.html":{}}}],["table.service",{"_index":553,"title":{},"body":{"controllers/TableController.html":{},"modules/TableModule.html":{}}}],["table.ts",{"_index":1142,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["table/table.module",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["tablecontroller",{"_index":540,"title":{"controllers/TableController.html":{}},"body":{"controllers/TableController.html":{},"modules/TableModule.html":{},"coverage.html":{}}}],["tablemodule",{"_index":74,"title":{"modules/TableModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TableModule.html":{},"modules.html":{},"overview.html":{}}}],["tablenumber",{"_index":210,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["tables",{"_index":1143,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tableservice",{"_index":552,"title":{"injectables/TableService.html":{}},"body":{"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"coverage.html":{},"overview.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1148,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":825,"title":{},"body":{"changelog.html":{}}}],["tags",{"_index":836,"title":{},"body":{"changelog.html":{}}}],["take",{"_index":1031,"title":{},"body":{"contributing.html":{}}}],["tallesl",{"_index":778,"title":{},"body":{"changelog.html":{}}}],["task",{"_index":1210,"title":{},"body":{"todo.html":{}}}],["team",{"_index":1082,"title":{},"body":{"contributing.html":{}}}],["temporarily",{"_index":1049,"title":{},"body":{"contributing.html":{}}}],["temporary",{"_index":1104,"title":{},"body":{"contributing.html":{}}}],["things",{"_index":742,"title":{},"body":{"changelog.html":{}}}],["this.$connect",{"_index":461,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('beforeexit",{"_index":462,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.appservice.getappstatus(baseurl",{"_index":60,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(logindto",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.findbyid(id",{"_index":530,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["this.jwtservice.sign",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.orderservice.create(user.id",{"_index":408,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.findall",{"_index":409,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.findone(id",{"_index":412,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.prisma.order",{"_index":438,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.prisma.order.findmany",{"_index":441,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.prisma.order.findunique",{"_index":443,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.prisma.product",{"_index":533,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.prisma.product.create",{"_index":531,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.prisma.product.delete",{"_index":534,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.prisma.product.findmany",{"_index":525,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.prisma.product.findunique",{"_index":527,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.prisma.table",{"_index":577,"title":{},"body":{"injectables/TableService.html":{}}}],["this.prisma.table.create",{"_index":576,"title":{},"body":{"injectables/TableService.html":{}}}],["this.prisma.table.delete",{"_index":578,"title":{},"body":{"injectables/TableService.html":{}}}],["this.prisma.table.findmany",{"_index":574,"title":{},"body":{"injectables/TableService.html":{}}}],["this.prisma.table.findunique",{"_index":575,"title":{},"body":{"injectables/TableService.html":{}}}],["this.prisma.user",{"_index":647,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.delete",{"_index":650,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.findmany",{"_index":636,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.findunique",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["this.productservice.create(createproductdto",{"_index":496,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.delete(id",{"_index":505,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.findall",{"_index":497,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.findone(id",{"_index":498,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.update(id",{"_index":501,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.tableservice.create(dto",{"_index":558,"title":{},"body":{"controllers/TableController.html":{}}}],["this.tableservice.delete(id",{"_index":560,"title":{},"body":{"controllers/TableController.html":{}}}],["this.tableservice.findall",{"_index":556,"title":{},"body":{"controllers/TableController.html":{}}}],["this.tableservice.findone(id",{"_index":557,"title":{},"body":{"controllers/TableController.html":{}}}],["this.tableservice.update(id",{"_index":559,"title":{},"body":{"controllers/TableController.html":{}}}],["this.userselect",{"_index":637,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.create(createuserdto",{"_index":610,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.delete(id",{"_index":615,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findall",{"_index":612,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findone(id",{"_index":613,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.update(id",{"_index":614,"title":{},"body":{"controllers/UserController.html":{}}}],["threatening",{"_index":1054,"title":{},"body":{"contributing.html":{}}}],["throughout",{"_index":852,"title":{},"body":{"changelog.html":{}}}],["throw",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["tianshuo",{"_index":693,"title":{},"body":{"changelog.html":{}}}],["todas",{"_index":544,"title":{},"body":{"controllers/TableController.html":{}}}],["todo",{"_index":1194,"title":{"todo.html":{}},"body":{"todo.html":{}}}],["todo.md",{"_index":1195,"title":{},"body":{"todo.html":{}}}],["todos",{"_index":394,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["token",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginResponseDto.html":{}}}],["towards",{"_index":997,"title":{},"body":{"contributing.html":{}}}],["traditional",{"_index":690,"title":{},"body":{"changelog.html":{}}}],["transformer",{"_index":234,"title":{},"body":{"classes/CreateOrderDto.html":{},"dependencies.html":{}}}],["translation",{"_index":695,"title":{},"body":{"changelog.html":{}}}],["translations",{"_index":692,"title":{},"body":{"changelog.html":{}}}],["trolling",{"_index":1006,"title":{},"body":{"contributing.html":{}}}],["true",{"_index":244,"title":{},"body":{"classes/CreateOrderDto.html":{},"injectables/OrderService.html":{},"injectables/UserService.html":{}}}],["true})@type(undefined)@apiproperty({description",{"_index":213,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["turkish",{"_index":702,"title":{},"body":{"changelog.html":{}}}],["two",{"_index":945,"title":{},"body":{"contributing.html":{}}}],["tylerfortune8",{"_index":672,"title":{},"body":{"changelog.html":{}}}],["type",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":1153,"title":{},"body":{"dependencies.html":{}}}],["typos",{"_index":766,"title":{},"body":{"changelog.html":{}}}],["ui",{"_index":1173,"title":{},"body":{"dependencies.html":{}}}],["ukrainian",{"_index":725,"title":{},"body":{"changelog.html":{}}}],["um",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["uma",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/TableController.html":{}}}],["unacceptable",{"_index":999,"title":{},"body":{"contributing.html":{}}}],["unauthorizedexception",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["unauthorizedexception('usuário",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{}}}],["undefined",{"_index":222,"title":{},"body":{"classes/CreateOrderDto.html":{},"miscellaneous/functions.html":{}}}],["understand",{"_index":1199,"title":{},"body":{"todo.html":{}}}],["unicorns",{"_index":746,"title":{},"body":{"changelog.html":{}}}],["unknown",{"_index":342,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["unlicensed",{"_index":1192,"title":{},"body":{"properties.html":{}}}],["unreleased",{"_index":664,"title":{},"body":{"changelog.html":{}}}],["unwelcome",{"_index":1003,"title":{},"body":{"contributing.html":{}}}],["up",{"_index":743,"title":{},"body":{"changelog.html":{}}}],["update",{"_index":474,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["update(@param('id",{"_index":500,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["update(id",{"_index":484,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updatedat",{"_index":374,"title":{},"body":{"classes/Order.html":{},"classes/Product.html":{},"classes/Table.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["updateproductdto",{"_index":485,"title":{"classes/UpdateProductDto.html":{}},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["updatetabledto",{"_index":548,"title":{"classes/UpdateTableDto.html":{}},"body":{"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/UpdateTableDto.html":{},"coverage.html":{}}}],["updateuserdto",{"_index":584,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["url",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"changelog.html":{}}}],["usage",{"_index":736,"title":{},"body":{"changelog.html":{}}}],["usando",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{}}}],["use",{"_index":762,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["useful",{"_index":935,"title":{},"body":{"contributing.html":{}}}],["useguards",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["useguards(authguard",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["user",{"_index":115,"title":{"classes/User.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.controller",{"_index":620,"title":{},"body":{"modules/UserModule.html":{}}}],["user.decorator",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{}}}],["user.decorator.ts",{"_index":1126,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.dto",{"_index":586,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.dto.ts",{"_index":301,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:10",{"_index":322,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:17",{"_index":318,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:28",{"_index":329,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:34",{"_index":309,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:41",{"_index":312,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.password",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["user.service",{"_index":607,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user.ts",{"_index":1137,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user/user.module",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["usercontroller",{"_index":596,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userid",{"_index":422,"title":{},"body":{"injectables/OrderService.html":{}}}],["usermodule",{"_index":75,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["users",{"_index":1138,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["userselect",{"_index":622,"title":{},"body":{"injectables/UserService.html":{}}}],["userservice",{"_index":606,"title":{"injectables/UserService.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":730,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["usuário",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"controllers/UserController.html":{}}}],["usuários",{"_index":611,"title":{},"body":{"controllers/UserController.html":{}}}],["usuários'})@useguards(undefined)@apibearerauth",{"_index":602,"title":{},"body":{"controllers/UserController.html":{}}}],["utilizado",{"_index":319,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["valida",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{}}}],["validate",{"_index":336,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":338,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validatenested",{"_index":238,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["validatenested({each",{"_index":212,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["validator",{"_index":239,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"dependencies.html":{}}}],["value",{"_index":632,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1127,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":932,"title":{"miscellaneous/variables.html":{}},"body":{"contributing.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":673,"title":{},"body":{"changelog.html":{},"contributing.html":{},"properties.html":{}}}],["versioning",{"_index":663,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["versions",{"_index":679,"title":{},"body":{"changelog.html":{}}}],["via",{"_index":909,"title":{},"body":{"contributing.html":{}}}],["view",{"_index":1196,"title":{},"body":{"todo.html":{}}}],["viewpoints",{"_index":987,"title":{},"body":{"contributing.html":{}}}],["visual",{"_index":670,"title":{},"body":{"changelog.html":{}}}],["visualizar",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["void",{"_index":481,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["vs",{"_index":771,"title":{},"body":{"changelog.html":{}}}],["way",{"_index":812,"title":{},"body":{"changelog.html":{}}}],["website",{"_index":1201,"title":{},"body":{"todo.html":{}}}],["webysther",{"_index":708,"title":{},"body":{"changelog.html":{}}}],["welcoming",{"_index":953,"title":{},"body":{"contributing.html":{}}}],["wiki",{"_index":1043,"title":{},"body":{"contributing.html":{}}}],["wish",{"_index":908,"title":{},"body":{"contributing.html":{}}}],["within",{"_index":1059,"title":{},"body":{"contributing.html":{}}}],["without",{"_index":1019,"title":{},"body":{"contributing.html":{}}}],["work",{"_index":1200,"title":{},"body":{"todo.html":{}}}],["world",{"_index":808,"title":{},"body":{"changelog.html":{}}}],["writes",{"_index":809,"title":{},"body":{"changelog.html":{}}}],["yanked",{"_index":831,"title":{},"body":{"changelog.html":{}}}],["year",{"_index":800,"title":{},"body":{"changelog.html":{}}}],["z",{"_index":325,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["z])(?=.*[a",{"_index":324,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["zapashcanon",{"_index":705,"title":{},"body":{"changelog.html":{}}}],["zeliosariex",{"_index":780,"title":{},"body":{"changelog.html":{}}}],["zoom",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAppStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAppStatus\n                        \n                    \n                \n            \n            \n                \ngetAppStatus(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Visualizar status da aplicação'})\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:21\n                \n            \n\n\n            \n                \n                    Recebe uma requisição GET e retorna um objeto de status\nda aplicação com a URL de documentação\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Objeto de Request do Express\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Objeto de status da aplicação\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Req } from '@nestjs/common';\nimport { ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { Request } from 'express';\nimport { AppService } from './app.service';\n\n@ApiTags('status')\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  /**\n   * Recebe uma requisição GET e retorna um objeto de status\n   * da aplicação com a URL de documentação\n   * @param req Objeto de Request do Express\n   * @returns Objeto de status da aplicação\n   */\n  @Get()\n  @ApiOperation({\n    summary: 'Visualizar status da aplicação',\n  })\n  getAppStatus(@Req() req: Request) {\n    const baseUrl = req.protocol + '://' + req.get('host');\n    return this.appService.getAppStatus(baseUrl);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nOrderModule\n\nOrderModule\n\nAppModule -->\n\nOrderModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nProductModule\n\nProductModule\n\nAppModule -->\n\nProductModule->AppModule\n\n\n\n\n\nTableModule\n\nTableModule\n\nAppModule -->\n\nTableModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            OrderModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            ProductModule\n                        \n                        \n                            TableModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { TableModule } from './table/table.module';\nimport { PrismaModule } from './prisma/prisma.module';\nimport { ProductModule } from './product/product.module';\nimport { UserModule } from './user/user.module';\nimport { OrderModule } from './order/order.module';\nimport { AuthModule } from './auth/auth.module';\n\n@Module({\n  imports: [TableModule, PrismaModule, ProductModule, UserModule, OrderModule, AuthModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAppStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAppStatus\n                        \n                    \n                \n            \n            \n                \ngetAppStatus(baseUrl: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    baseUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { status: string; docs: string; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getAppStatus(baseUrl: string) {\n    return {\n      status: 'Server is running! 🚀',\n      docs: baseUrl + '/api',\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                profile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(loginDto: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@HttpCode(HttpStatus.OK)@ApiOperation({summary: 'Realizar login, recebendo um token de autenticação'})\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginDto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profile\n                        \n                    \n                \n            \n            \n                \nprofile(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseGuards(undefined)@ApiOperation({summary: 'Retorna o usuário autenticado no momento'})@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         User\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Post,\n  UseGuards,\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { User } from 'src/user/entities/user.entity';\nimport { AuthService } from './auth.service';\nimport { LoginResponseDto } from './dto/login-response.dto';\nimport { LoginDto } from './dto/login.dto';\nimport { LoggedUser } from './logged-user.decorator';\n\n@Controller('auth')\n@ApiTags('auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  @Post()\n  @HttpCode(HttpStatus.OK)\n  @ApiOperation({\n    summary: 'Realizar login, recebendo um token de autenticação',\n  })\n  login(@Body() loginDto: LoginDto): Promise {\n    return this.authService.login(loginDto);\n  }\n\n  @Get()\n  @UseGuards(AuthGuard())\n  @ApiOperation({\n    summary: 'Retorna o usuário autenticado no momento',\n  })\n  @ApiBearerAuth()\n  profile(@LoggedUser() user: User) {\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtStrategy } from './jwt.strategy';\n\n@Module({\n  imports: [\n    PrismaModule,\n    PassportModule.register({ defaultStrategy: 'jwt' }),\n    JwtModule.register({\n      secret: process.env.JWT_SECRET,\n      signOptions: { expiresIn: '24h' },\n    }),\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(loginDto: LoginDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginDto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport * as bcrypt from 'bcrypt';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { LoginResponseDto } from './dto/login-response.dto';\nimport { LoginDto } from './dto/login.dto';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private readonly prisma: PrismaService,\n    private readonly jwtService: JwtService,\n  ) {}\n\n  async login(loginDto: LoginDto): Promise {\n    const { nickname, password } = loginDto;\n\n    // Procura e checa se o user existe, usando o nickname\n    const user = await this.prisma.user.findUnique({ where: { nickname } });\n\n    if (!user) {\n      throw new UnauthorizedException('Usuário e/ou senha inválidos');\n    }\n\n    // Valida se a senha informada é correta\n    const isHashValid = await bcrypt.compare(password, user.password);\n\n    if (!isHashValid) {\n      throw new UnauthorizedException('Usuário e/ou senha inválidos');\n    }\n\n    delete user.password;\n\n    return {\n      token: this.jwtService.sign({ nickname }),\n      user,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOrderDto.html":{"url":"classes/CreateOrderDto.html","title":"class - CreateOrderDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOrderDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/dto/create-order.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                products\n                            \n                            \n                                tableNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CreateOrderProductDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested({each: true})@Type(undefined)@ApiProperty({description: 'Lista com os IDs dos produtos que estão no pedido', type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/create-order.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tableNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsPositive()@ApiProperty({description: 'Número da mesa que está realizando o pedido', example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/create-order.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsInt, IsPositive, IsUUID, ValidateNested } from 'class-validator';\nimport { CreateOrderProductDto } from './create-order-product.dto';\n\nexport class CreateOrderDto {\n  @IsInt()\n  @IsPositive()\n  @ApiProperty({\n    description: 'Número da mesa que está realizando o pedido',\n    example: 1,\n  })\n  tableNumber: number;\n\n  @ValidateNested({\n    each: true,\n  })\n  @Type(() => CreateOrderProductDto)\n  @ApiProperty({\n    description: 'Lista com os IDs dos produtos que estão no pedido',\n    type: [CreateOrderProductDto],\n  })\n  products: CreateOrderProductDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOrderProductDto.html":{"url":"classes/CreateOrderProductDto.html","title":"class - CreateOrderProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOrderProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/dto/create-order-product.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                productId\n                            \n                            \n                                quantity\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Observações do produto', example: 'Sem cebola'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/create-order-product.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        productId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUUID()@ApiProperty({description: 'ID do produto', example: '04f66779-bcfa-4c5c-a140-f234138890f3'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/create-order-product.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsPositive()@ApiProperty({description: 'Quantidade de itens no pedido', example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/create-order-product.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsInt, IsPositive, IsString, IsUUID } from 'class-validator';\n\nexport class CreateOrderProductDto {\n  @IsUUID()\n  @ApiProperty({\n    description: 'ID do produto',\n    example: '04f66779-bcfa-4c5c-a140-f234138890f3',\n  })\n  productId: string;\n\n  @IsInt()\n  @IsPositive()\n  @ApiProperty({\n    description: 'Quantidade de itens no pedido',\n    example: 1,\n  })\n  quantity: number;\n\n  @IsString()\n  @ApiProperty({\n    description: 'Observações do produto',\n    example: 'Sem cebola',\n  })\n  description: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProductDto.html":{"url":"classes/CreateProductDto.html","title":"class - CreateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/dto/create-product.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                image\n                            \n                            \n                                name\n                            \n                            \n                                price\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Descrição do produto', example: 'Queijo mussarela fino do fino, massa fina e borda recheada de catupiry'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUrl()@ApiProperty({description: 'Imagem do produto', example: 'https://i.imgur.com/hNE75Iw.png'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Nome do produto', example: 'Pizza de Mussarela'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber({maxDecimalPlaces: 2})@ApiProperty({description: 'Preço do produto', example: 12.34})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNumber, IsString, IsUrl } from 'class-validator';\n\nexport class CreateProductDto {\n  @IsString()\n  @ApiProperty({\n    description: 'Nome do produto',\n    example: 'Pizza de Mussarela',\n  })\n  name: string;\n\n  @IsString()\n  @ApiProperty({\n    description: 'Descrição do produto',\n    example:\n      'Queijo mussarela fino do fino, massa fina e borda recheada de catupiry',\n  })\n  description: string;\n\n  @IsNumber({\n    maxDecimalPlaces: 2,\n  })\n  @ApiProperty({\n    description: 'Preço do produto',\n    example: 12.34,\n  })\n  price: number;\n\n  @IsUrl()\n  @ApiProperty({\n    description: 'Imagem do produto',\n    example: 'https://i.imgur.com/hNE75Iw.png',\n  })\n  image: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTableDto.html":{"url":"classes/CreateTableDto.html","title":"class - CreateTableDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTableDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/table/dto/create-table.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                number\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsPositive()@ApiProperty({description: 'O número da mesa', example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/table/dto/create-table.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNumber, IsPositive } from 'class-validator';\n\nexport class CreateTableDto {\n  @IsNumber()\n  @IsPositive()\n  @ApiProperty({\n    description: 'O número da mesa',\n    example: 1,\n  })\n  number: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                confirmPassword\n                            \n                            \n                                image\n                            \n                            \n                                name\n                            \n                            \n                                nickname\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        confirmPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'A confirmação da senha deve ser igual a senha', example: 'Abcd@1234'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUrl()@ApiProperty({description: 'Imagem de perfil do usuário', example: 'https://avatars.githubusercontent.com/u/7906171'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Nome do usuário. Apenas para exibição', example: 'Paulo Salvatore'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nickname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Nome de usuário. Utilizado no login. Deve ser único', example: 'paulosalvatore'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(6)@Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {message: 'Senha muito fraca'})@ApiProperty({description: 'Senha do usuário para login', example: 'Abcd@1234'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString, IsUrl, Matches, MinLength } from 'class-validator';\n\nexport class CreateUserDto {\n  @IsString()\n  @ApiProperty({\n    description: 'Nome de usuário. Utilizado no login. Deve ser único',\n    example: 'paulosalvatore',\n  })\n  nickname: string;\n\n  @IsString()\n  @ApiProperty({\n    description: 'Nome do usuário. Apenas para exibição',\n    example: 'Paulo Salvatore',\n  })\n  name: string;\n\n  @IsString()\n  @MinLength(6)\n  @Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {\n    message: 'Senha muito fraca',\n  })\n  @ApiProperty({\n    description: 'Senha do usuário para login',\n    example: 'Abcd@1234',\n  })\n  password: string;\n\n  @ApiProperty({\n    description: 'A confirmação da senha deve ser igual a senha',\n    example: 'Abcd@1234',\n  })\n  confirmPassword: string;\n\n  @IsUrl()\n  @ApiProperty({\n    description: 'Imagem de perfil do usuário',\n    example: 'https://avatars.githubusercontent.com/u/7906171',\n  })\n  image: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt.strategy.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PrismaService } from 'src/prisma/prisma.service';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(private readonly prisma: PrismaService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: process.env.JWT_SECRET,\n    });\n  }\n\n  async validate(payload: { nickname: string }) {\n    const user = await this.prisma.user.findUnique({\n      where: { nickname: payload.nickname },\n    });\n\n    if (!user) {\n      throw new UnauthorizedException(\n        'Usuário não existe ou não está autenticado',\n      );\n    }\n\n    delete user.password;\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                nickname\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        nickname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({description: 'Nickname do usuário', example: 'paulosalvatore'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({description: 'Senha do usuário', example: 'Abcd@1234'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsString } from 'class-validator';\n\nexport class LoginDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'Nickname do usuário',\n    example: 'paulosalvatore',\n  })\n  nickname: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'Senha do usuário',\n    example: 'Abcd@1234',\n  })\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginResponseDto.html":{"url":"classes/LoginResponseDto.html","title":"class - LoginResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                token\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'JWT gerado pelo login', example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuaWNrbmFtZSI6InBhdWxvc2FsdmF0b3JlIiwiaWF0IjoxNjUyMjgxNjUwLCJleHAiOjE2NTIzNjgwNTB9._otkmKymFZ4kgxwAMdK5oXBDg6cK6_NXwCrP64IilS8'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login-response.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Dados do usuário autenticado'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login-response.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { User } from 'src/user/entities/user.entity';\n\nexport class LoginResponseDto {\n  @ApiProperty({\n    description: 'JWT gerado pelo login',\n    example:\n      'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuaWNrbmFtZSI6InBhdWxvc2FsdmF0b3JlIiwiaWF0IjoxNjUyMjgxNjUwLCJleHAiOjE2NTIzNjgwNTB9._otkmKymFZ4kgxwAMdK5oXBDg6cK6_NXwCrP64IilS8',\n  })\n  token: string;\n\n  @ApiProperty({\n    description: 'Dados do usuário autenticado',\n  })\n  user: User;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Order.html":{"url":"classes/Order.html","title":"class - Order","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Order\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/entities/order.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    Optional\n                                products\n                            \n                            \n                                    Optional\n                                table\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    Optional\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Product[]\n\n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        table\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Table\n\n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Product } from 'src/product/entities/product.entity';\nimport { Table } from 'src/table/entities/table.entity';\nimport { User } from 'src/user/entities/user.entity';\n\nexport class Order {\n  id?: string;\n  user?: User;\n  table?: Table;\n  createdAt?: Date;\n  updatedAt?: Date;\n  products?: Product[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrderController.html":{"url":"controllers/OrderController.html","title":"controller - OrderController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrderController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/order.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                order\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(user: User, createOrderDto: CreateOrderDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Criar um pedido'})\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createOrderDto\n                                    \n                                                CreateOrderDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Listar todos os pedidos'})\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Visualizar um pedido pelo ID'})\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Post, UseGuards } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { LoggedUser } from 'src/auth/logged-user.decorator';\nimport { User } from 'src/user/entities/user.entity';\nimport { CreateOrderDto } from './dto/create-order.dto';\nimport { OrderService } from './order.service';\n\n@ApiTags('order')\n@UseGuards(AuthGuard())\n@ApiBearerAuth()\n@Controller('order')\nexport class OrderController {\n  constructor(private readonly orderService: OrderService) {}\n\n  @Post()\n  @ApiOperation({\n    summary: 'Criar um pedido',\n  })\n  create(@LoggedUser() user: User, @Body() createOrderDto: CreateOrderDto) {\n    return this.orderService.create(user.id, createOrderDto);\n  }\n\n  @Get()\n  @ApiOperation({\n    summary: 'Listar todos os pedidos',\n  })\n  findAll() {\n    return this.orderService.findAll();\n  }\n\n  @Get(':id')\n  @ApiOperation({\n    summary: 'Visualizar um pedido pelo ID',\n  })\n  findOne(@Param('id') id: string) {\n    return this.orderService.findOne(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrderModule.html":{"url":"modules/OrderModule.html","title":"module - OrderModule","body":"\n                   \n\n\n\n\n    Modules\n    OrderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_OrderModule\n\n\n\ncluster_OrderModule_providers\n\n\n\ncluster_OrderModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nOrderModule\n\nOrderModule\n\nOrderModule -->\n\nPrismaModule->OrderModule\n\n\n\n\n\nOrderService\n\nOrderService\n\nOrderModule -->\n\nOrderService->OrderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/order/order.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OrderService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OrderController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { OrderService } from './order.service';\nimport { OrderController } from './order.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({ defaultStrategy: 'jwt' })],\n  controllers: [OrderController],\n  providers: [OrderService],\n})\nexport class OrderModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrderService.html":{"url":"injectables/OrderService.html","title":"injectable - OrderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/order.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/order/order.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(userId: string, createOrderDto: CreateOrderDto)\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createOrderDto\n                                    \n                                                CreateOrderDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Prisma } from '@prisma/client';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { handleError } from 'src/utils/handle-error.util';\nimport { CreateOrderDto } from './dto/create-order.dto';\n\n@Injectable()\nexport class OrderService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  create(userId: string, createOrderDto: CreateOrderDto) {\n    const data: Prisma.OrderCreateInput = {\n      user: {\n        connect: {\n          id: userId,\n        },\n      },\n      table: {\n        connect: {\n          number: createOrderDto.tableNumber,\n        },\n      },\n      products: {\n        createMany: {\n          data: createOrderDto.products.map((createOrderProductDto) => ({\n            productId: createOrderProductDto.productId,\n            quantity: createOrderProductDto.quantity,\n            description: createOrderProductDto.description,\n          })),\n        },\n      },\n    };\n\n    return this.prisma.order\n      .create({\n        data,\n        select: {\n          id: true,\n          table: {\n            select: {\n              number: true,\n            },\n          },\n          user: {\n            select: {\n              name: true,\n            },\n          },\n          products: {\n            select: {\n              quantity: true,\n              description: true,\n              product: {\n                select: {\n                  name: true,\n                },\n              },\n            },\n          },\n        },\n      })\n      .catch(handleError);\n  }\n\n  findAll() {\n    return this.prisma.order.findMany({\n      select: {\n        id: true,\n        table: {\n          select: {\n            number: true,\n          },\n        },\n        user: {\n          select: {\n            name: true,\n          },\n        },\n        _count: {\n          select: {\n            products: true,\n          },\n        },\n      },\n    });\n  }\n\n  findOne(id: string) {\n    return this.prisma.order.findUnique({\n      where: { id },\n      include: {\n        user: {\n          select: {\n            name: true,\n          },\n        },\n        table: {\n          select: {\n            number: true,\n          },\n        },\n        products: {\n          select: {\n            product: {\n              select: {\n                id: true,\n                name: true,\n                price: true,\n                image: true,\n                description: true,\n              },\n            },\n          },\n        },\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                    \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { INestApplication, Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  async onModuleInit() {\n    await this.$connect();\n  }\n\n  async enableShutdownHooks(app: INestApplication) {\n    this.$on('beforeExit', async () => {\n      await app.close();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Product.html":{"url":"classes/Product.html","title":"class - Product","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/entities/product.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                description\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                image\n                            \n                            \n                                name\n                            \n                            \n                                price\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Product {\n  id?: string;\n  name: string;\n  description: string;\n  price: number;\n  image: string;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductController.html":{"url":"controllers/ProductController.html","title":"controller - ProductController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/product.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                product\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createProductDto: CreateProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Criar um produto'})\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createProductDto\n                                    \n                                                CreateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@HttpCode(HttpStatus.NO_CONTENT)@ApiOperation({summary: 'Remover um produto pelo ID'})\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Listar todos os produtos'})\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Visualizar um produto pelo ID'})\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateProductDto: UpdateProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Editar um produto pelo ID'})\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateProductDto\n                                    \n                                                UpdateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  HttpCode,\n  HttpStatus,\n  UseGuards,\n} from '@nestjs/common';\nimport { ProductService } from './product.service';\nimport { CreateProductDto } from './dto/create-product.dto';\nimport { UpdateProductDto } from './dto/update-product.dto';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\n\n@ApiTags('product')\n@UseGuards(AuthGuard())\n@ApiBearerAuth()\n@Controller('product')\nexport class ProductController {\n  constructor(private readonly productService: ProductService) {}\n\n  @Post()\n  @ApiOperation({\n    summary: 'Criar um produto',\n  })\n  create(@Body() createProductDto: CreateProductDto) {\n    return this.productService.create(createProductDto);\n  }\n\n  @Get()\n  @ApiOperation({\n    summary: 'Listar todos os produtos',\n  })\n  findAll() {\n    return this.productService.findAll();\n  }\n\n  @Get(':id')\n  @ApiOperation({\n    summary: 'Visualizar um produto pelo ID',\n  })\n  findOne(@Param('id') id: string) {\n    return this.productService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ApiOperation({\n    summary: 'Editar um produto pelo ID',\n  })\n  update(@Param('id') id: string, @Body() updateProductDto: UpdateProductDto) {\n    return this.productService.update(id, updateProductDto);\n  }\n\n  @Delete(':id')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiOperation({\n    summary: 'Remover um produto pelo ID',\n  })\n  delete(@Param('id') id: string) {\n    this.productService.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductModule.html":{"url":"modules/ProductModule.html","title":"module - ProductModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ProductModule\n\n\n\ncluster_ProductModule_imports\n\n\n\ncluster_ProductModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nProductModule\n\nProductModule\n\nProductModule -->\n\nPrismaModule->ProductModule\n\n\n\n\n\nProductService\n\nProductService\n\nProductModule -->\n\nProductService->ProductModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/product/product.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProductService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProductController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProductService } from './product.service';\nimport { ProductController } from './product.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({ defaultStrategy: 'jwt' })],\n  controllers: [ProductController],\n  providers: [ProductService],\n})\nexport class ProductModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductService.html":{"url":"injectables/ProductService.html","title":"injectable - ProductService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/product.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/product/product.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(dto: CreateProductDto)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, dto: UpdateProductDto)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { handleError } from 'src/utils/handle-error.util';\nimport { CreateProductDto } from './dto/create-product.dto';\nimport { UpdateProductDto } from './dto/update-product.dto';\nimport { Product } from './entities/product.entity';\n\n@Injectable()\nexport class ProductService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  findAll(): Promise {\n    return this.prisma.product.findMany();\n  }\n\n  async findById(id: string): Promise {\n    const record = await this.prisma.product.findUnique({ where: { id } });\n\n    if (!record) {\n      throw new NotFoundException(`Registro com o ID '${id}' não encontrado.`);\n    }\n\n    return record;\n  }\n\n  async findOne(id: string): Promise {\n    return this.findById(id);\n  }\n\n  create(dto: CreateProductDto): Promise {\n    const data: Product = { ...dto };\n\n    return this.prisma.product.create({ data }).catch(handleError);\n  }\n\n  async update(id: string, dto: UpdateProductDto): Promise {\n    await this.findById(id);\n\n    const data: Partial = { ...dto };\n\n    return this.prisma.product\n      .update({\n        where: { id },\n        data,\n      })\n      .catch(handleError);\n  }\n\n  async delete(id: string) {\n    await this.findById(id);\n\n    await this.prisma.product.delete({ where: { id } });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Table.html":{"url":"classes/Table.html","title":"class - Table","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Table\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/table/entities/table.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                number\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/table/entities/table.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/table/entities/table.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/table/entities/table.entity.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/table/entities/table.entity.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Table {\n  id?: string;\n  number: number;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TableController.html":{"url":"controllers/TableController.html","title":"controller - TableController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TableController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/table/table.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                table\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(dto: CreateTableDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Criar uma mesa'})\n                \n            \n\n            \n                \n                    Defined in src/table/table.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateTableDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@HttpCode(HttpStatus.NO_CONTENT)@ApiOperation({summary: 'Remover uma mesa pelo ID'})\n                \n            \n\n            \n                \n                    Defined in src/table/table.controller.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Listar todas as mesas'})\n                \n            \n\n            \n                \n                    Defined in src/table/table.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Visualizar uma mesa'})\n                \n            \n\n            \n                \n                    Defined in src/table/table.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, dto: UpdateTableDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Editar uma mesa pelo ID'})\n                \n            \n\n            \n                \n                    Defined in src/table/table.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateTableDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Param,\n  Patch,\n  Post,\n  UseGuards,\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { CreateTableDto } from './dto/create-table.dto';\nimport { UpdateTableDto } from './dto/update-table.dto';\nimport { Table } from './entities/table.entity';\nimport { TableService } from './table.service';\n\n@ApiTags('table')\n@UseGuards(AuthGuard())\n@ApiBearerAuth()\n@Controller('table')\nexport class TableController {\n  constructor(private readonly tableService: TableService) {}\n\n  @Get()\n  @ApiOperation({\n    summary: 'Listar todas as mesas',\n  })\n  findAll(): Promise {\n    return this.tableService.findAll();\n  }\n\n  @Get(':id')\n  @ApiOperation({\n    summary: 'Visualizar uma mesa',\n  })\n  findOne(@Param('id') id: string): Promise {\n    return this.tableService.findOne(id);\n  }\n\n  @Post()\n  @ApiOperation({\n    summary: 'Criar uma mesa',\n  })\n  create(@Body() dto: CreateTableDto): Promise {\n    return this.tableService.create(dto);\n  }\n\n  @Patch(':id')\n  @ApiOperation({\n    summary: 'Editar uma mesa pelo ID',\n  })\n  update(@Param('id') id: string, @Body() dto: UpdateTableDto): Promise {\n    return this.tableService.update(id, dto);\n  }\n\n  @Delete(':id')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiOperation({\n    summary: 'Remover uma mesa pelo ID',\n  })\n  delete(@Param('id') id: string) {\n    this.tableService.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TableModule.html":{"url":"modules/TableModule.html","title":"module - TableModule","body":"\n                   \n\n\n\n\n    Modules\n    TableModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TableModule\n\n\n\ncluster_TableModule_providers\n\n\n\ncluster_TableModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nTableModule\n\nTableModule\n\nTableModule -->\n\nPrismaModule->TableModule\n\n\n\n\n\nTableService\n\nTableService\n\nTableModule -->\n\nTableService->TableModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/table/table.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TableService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TableController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { TableController } from './table.controller';\nimport { TableService } from './table.service';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({ defaultStrategy: 'jwt' })],\n  controllers: [TableController],\n  providers: [TableService],\n})\nexport class TableModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TableService.html":{"url":"injectables/TableService.html","title":"injectable - TableService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TableService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/table/table.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/table/table.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(dto: CreateTableDto)\n                \n            \n\n\n            \n                \n                    Defined in src/table/table.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateTableDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/table/table.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/table/table.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/table/table.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/table/table.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, dto: UpdateTableDto)\n                \n            \n\n\n            \n                \n                    Defined in src/table/table.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateTableDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { handleError } from 'src/utils/handle-error.util';\nimport { CreateTableDto } from './dto/create-table.dto';\nimport { UpdateTableDto } from './dto/update-table.dto';\nimport { Table } from './entities/table.entity';\n\n@Injectable()\nexport class TableService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  findAll(): Promise {\n    return this.prisma.table.findMany();\n  }\n\n  async findById(id: string): Promise {\n    const record = await this.prisma.table.findUnique({ where: { id } });\n\n    if (!record) {\n      throw new NotFoundException(`Registro com o ID '${id}' não encontrado.`);\n    }\n\n    return record;\n  }\n\n  async findOne(id: string): Promise {\n    return this.findById(id);\n  }\n\n  create(dto: CreateTableDto): Promise {\n    const data: Table = { ...dto };\n\n    return this.prisma.table.create({ data }).catch(handleError);\n  }\n\n  async update(id: string, dto: UpdateTableDto): Promise {\n    await this.findById(id);\n\n    const data: Partial = { ...dto };\n\n    return this.prisma.table\n      .update({\n        where: { id },\n        data,\n      })\n      .catch(handleError);\n  }\n\n  async delete(id: string) {\n    await this.findById(id);\n\n    await this.prisma.table.delete({ where: { id } });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProductDto.html":{"url":"classes/UpdateProductDto.html","title":"class - UpdateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/dto/update-product.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateProductDto } from './create-product.dto';\n\nexport class UpdateProductDto extends PartialType(CreateProductDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTableDto.html":{"url":"classes/UpdateTableDto.html","title":"class - UpdateTableDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTableDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/table/dto/update-table.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateTableDto } from './create-table.dto';\n\nexport class UpdateTableDto extends PartialType(CreateTableDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entities/user.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                image\n                            \n                            \n                                name\n                            \n                            \n                                nickname\n                            \n                            \n                                password\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nickname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n  id?: string;\n  nickname: string;\n  name: string;\n  password: string;\n  image: string;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Criar um usuário'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@HttpCode(HttpStatus.NO_CONTENT)@ApiOperation({summary: 'Remover um usuário pelo ID'})@UseGuards(undefined)@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Listar todos os usuários'})@UseGuards(undefined)@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Visualizar um usuário pelo ID'})@UseGuards(undefined)@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Editar um usuário pelo ID'})@UseGuards(undefined)@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  HttpCode,\n  HttpStatus,\n  UseGuards,\n} from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\n\n@ApiTags('user')\n@Controller('user')\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  @Post()\n  @ApiOperation({\n    summary: 'Criar um usuário',\n  })\n  create(@Body() createUserDto: CreateUserDto) {\n    return this.userService.create(createUserDto);\n  }\n\n  @Get()\n  @ApiOperation({\n    summary: 'Listar todos os usuários',\n  })\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  findAll() {\n    return this.userService.findAll();\n  }\n\n  @Get(':id')\n  @ApiOperation({\n    summary: 'Visualizar um usuário pelo ID',\n  })\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  findOne(@Param('id') id: string) {\n    return this.userService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ApiOperation({\n    summary: 'Editar um usuário pelo ID',\n  })\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  update(@Param('id') id: string, @Body() updateUserDto: UpdateUserDto) {\n    return this.userService.update(id, updateUserDto);\n  }\n\n  @Delete(':id')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiOperation({\n    summary: 'Remover um usuário pelo ID',\n  })\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  delete(@Param('id') id: string) {\n    this.userService.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\ncluster_UserModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nPrismaModule->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { UserController } from './user.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({ defaultStrategy: 'jwt' })],\n  controllers: [UserController],\n  providers: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                userSelect\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, dto: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userSelect\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: true,\n    nickname: true,\n    name: true,\n    password: false,\n    image: true,\n    createdAt: true,\n    updatedAt: true,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/user/user.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  NotFoundException,\n} from '@nestjs/common';\nimport * as bcrypt from 'bcrypt';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { handleError } from 'src/utils/handle-error.util';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { User } from './entities/user.entity';\n\n@Injectable()\nexport class UserService {\n  private userSelect = {\n    id: true,\n    nickname: true,\n    name: true,\n    password: false,\n    image: true,\n    createdAt: true,\n    updatedAt: true,\n  };\n\n  constructor(private readonly prisma: PrismaService) {}\n\n  findAll(): Promise {\n    return this.prisma.user.findMany({\n      select: this.userSelect,\n    });\n  }\n\n  async findById(id: string): Promise {\n    const record = await this.prisma.user.findUnique({\n      where: { id },\n      select: this.userSelect,\n    });\n\n    if (!record) {\n      throw new NotFoundException(`Registro com o ID '${id}' não encontrado.`);\n    }\n\n    return record;\n  }\n\n  async findOne(id: string): Promise {\n    return this.findById(id);\n  }\n\n  async create(dto: CreateUserDto): Promise {\n    if (dto.password != dto.confirmPassword) {\n      throw new BadRequestException('As senhas informadas não são iguais.');\n    }\n\n    delete dto.confirmPassword;\n\n    const data: User = {\n      ...dto,\n      password: await bcrypt.hash(dto.password, 10),\n    };\n\n    return this.prisma.user\n      .create({\n        data,\n        select: this.userSelect,\n      })\n      .catch(handleError);\n  }\n\n  async update(id: string, dto: UpdateUserDto): Promise {\n    await this.findById(id);\n\n    if (dto.password) {\n      if (dto.password != dto.confirmPassword) {\n        throw new BadRequestException('As senhas informadas não são iguais.');\n      }\n    }\n\n    delete dto.confirmPassword;\n\n    const data: Partial = { ...dto };\n\n    if (data.password) {\n      data.password = await bcrypt.hash(data.password, 10);\n    }\n\n    return this.prisma.user\n      .update({\n        where: { id },\n        data,\n        select: this.userSelect,\n      })\n      .catch(handleError);\n  }\n\n  async delete(id: string) {\n    await this.findById(id);\n\n    await this.prisma.user.delete({ where: { id } });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nAll notable changes to this project will be documented in this file.\nThe format is based on Keep a Changelog, and this project adheres\nto Semantic Versioning.\nUnreleased\n1.0.0 - 2017-06-20\nAdded\n\nNew visual identity by @tylerfortune8.\nVersion navigation.\nLinks to latest released version in previous versions.\n\"Why keep a changelog?\" section.\n\"Who needs a changelog?\" section.\n\"How do I make a changelog?\" section.\n\"Frequently Asked Questions\" section.\nNew \"Guiding Principles\" sub-section to \"How do I make a changelog?\".\nSimplified and Traditional Chinese translations from @tianshuo.\nGerman translation from @mpbzh & @Art4.\nItalian translation from @azkidenz.\nSwedish translation from @magol.\nTurkish translation from @karalamalar.\nFrench translation from @zapashcanon.\nBrazilian Portugese translation from @Webysther.\nPolish translation from @amielucha & @m-aciek.\nRussian translation from @aishek.\nCzech translation from @h4vry.\nSlovak translation from @jkostolansky.\nKorean translation from @pierceh89.\nCroatian translation from @porx.\nPersian translation from @Hameds.\nUkrainian translation from @osadchyi-s.\n\nChanged\n\nStart using \"changelog\" over \"change log\" since it's the common usage.\nStart versioning based on the current English version at 0.3.0 to help translation authors keep things up-to-date.\nRewrite \"What makes unicorns cry?\" section.\nRewrite \"Ignoring Deprecations\" sub-section to clarify the ideal scenario.\nImprove \"Commit log diffs\" sub-section to further argument against them.\nMerge \"Why can’t people just use a git log diff?\" with \"Commit log diffs\"\nFix typos in Simplified Chinese and Traditional Chinese translations.\nFix typos in Brazilian Portuguese translation.\nFix typos in Turkish translation.\nFix typos in Czech translation.\nFix typos in Swedish translation.\nImprove phrasing in French translation.\nFix phrasing and spelling in German translation.\n\nRemoved\n\nSection about \"changelog\" vs \"CHANGELOG\".\n\n0.3.0 - 2015-12-03\nAdded\n\nRU translation from @aishek.\npt-BR translation from @tallesl.\nes-ES translation from @ZeliosAriex.\n\n0.2.0 - 2015-10-06\nChanged\n\nRemove exclusionary mentions of \"open source\" since this project can benefit both \"open\" and \"closed\" source projects\nequally.\n\n0.1.0 - 2015-10-06\nAdded\n\nAnswer \"Should you ever rewrite a change log?\".\n\nChanged\n\nImprove argument against commit logs.\nStart following SemVer properly.\n\n0.0.8 - 2015-02-17\nChanged\n\nUpdate year to match in every README example.\nReluctantly stop making fun of Brits only, since most of the world writes dates in a strange way.\n\nFixed\n\nFix typos in recent README changes.\nUpdate outdated unreleased diff link.\n\n0.0.7 - 2015-02-16\nAdded\n\nLink, and make it obvious that date format is ISO 8601.\n\nChanged\n\nClarified the section on \"Is there a standard change log format?\".\n\nFixed\n\nFix Markdown links to tag comparison URL with footnote-style links.\n\n0.0.6 - 2014-12-12\nAdded\n\nREADME section on \"yanked\" releases.\n\n0.0.5 - 2014-08-09\nAdded\n\nMarkdown links to version tags on release headings.\nUnreleased section to gather unreleased changes and encourage note keeping prior to releases.\n\n0.0.4 - 2014-08-09\nAdded\n\nBetter explanation of the difference between the file (\"CHANGELOG\")\nand its function \"the change log\".\n\nChanged\n\nRefer to a \"change log\" instead of a \"CHANGELOG\" throughout the site to differentiate between the file and the purpose\nof the file — the logging of changes.\n\nRemoved\n\nRemove empty sections from CHANGELOG, they occupy too much space and create too much noise in the file. People will\nhave to assume that the missing sections were intentionally left out because they contained no notable changes.\n\n0.0.3 - 2014-08-09\nAdded\n\n\"Why should I care?\" section mentioning The Changelog podcast.\n\n0.0.2 - 2014-07-10\nAdded\n\nExplanation of the recommended reverse chronological release ordering.\n\n0.0.1 - 2014-05-31\nAdded\n\nThis CHANGELOG file to hopefully serve as an evolving example of a standardized open source project CHANGELOG.\nCNAME file to enable GitHub Pages custom domain\nREADME now contains answers to common questions about CHANGELOGs\nGood examples and basic guidelines, including proper date formatting.\nCounter-examples: \"What makes unicorns cry?\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\nContributing\nWhen contributing to this repository, please first discuss the change you wish to make via issue, email, or any other\nmethod with the owners of this repository before making a change.\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\nPull Request Process\n\nEnsure any install or build dependencies are removed before the end of the layer when doing a build.\nUpdate the README.md with details of changes to the interface, this includes new environment variables, exposed\nports, useful file locations and container parameters.\nIncrease the version numbers in any examples files and the README.md to the new version that this Pull Request would\nrepresent. The versioning scheme we use is SemVer.\nYou may merge the Pull Request in once you have the sign-off of two other developers, or if you do not have\npermission to do that, you may request the second reviewer to merge it for you.\n\nCode of Conduct\nOur Pledge\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making\nparticipation in our project and our community a harassment-free experience for everyone, regardless of age, body size,\ndisability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race,\nreligion, or sexual identity and orientation.\nOur Standards\nExamples of behavior that contributes to creating a positive environment include:\n\nUsing welcoming and inclusive language\nBeing respectful of differing viewpoints and experiences\nGracefully accepting constructive criticism\nFocusing on what is best for the community\nShowing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\nThe use of sexualized language or imagery and unwelcome sexual attention or advances\nTrolling, insulting/derogatory comments, and personal or political attacks\nPublic or private harassment\nPublishing others' private information, such as a physical or electronic address, without explicit permission\nOther conduct which could reasonably be considered inappropriate in a professional setting\n\nOur Responsibilities\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take\nappropriate and fair corrective action in response to any instances of unacceptable behavior.\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits,\nissues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any\ncontributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\nScope\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the\nproject or its community. Examples of representing a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed representative at an online or offline\nevent. Representation of a project may be further defined and clarified by project maintainers.\nEnforcement\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team\nat [INSERT EMAIL ADDRESS]. All complaints will be reviewed and investigated and will result in a response that is deemed\nnecessary and appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to\nthe reporter of an incident. Further details of specific enforcement policies may be posted separately.\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent\nrepercussions as determined by other members of the project's leadership.\nAttribution\nThis Code of Conduct is adapted from the Contributor Covenant, version 1.4, available\nat http://contributor-covenant.org/version/1/4\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/login-response.dto.ts\n            \n            class\n            LoginResponseDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/logged-user.decorator.ts\n            \n            variable\n            LoggedUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/order/dto/create-order-product.dto.ts\n            \n            class\n            CreateOrderProductDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/order/dto/create-order.dto.ts\n            \n            class\n            CreateOrderDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/order/entities/order.entity.ts\n            \n            class\n            Order\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/order/order.controller.ts\n            \n            controller\n            OrderController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/order/order.service.ts\n            \n            injectable\n            OrderService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/prisma/seed.ts\n            \n            variable\n            prisma\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/seed.ts\n            \n            variable\n            seeds\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/seed/01-user.ts\n            \n            variable\n            user\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/seed/01-user.ts\n            \n            variable\n            users\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/seed/02-product.ts\n            \n            variable\n            product\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/seed/02-product.ts\n            \n            variable\n            products\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/seed/03-table.ts\n            \n            variable\n            table\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/seed/03-table.ts\n            \n            variable\n            tables\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/product/dto/create-product.dto.ts\n            \n            class\n            CreateProductDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/product/dto/update-product.dto.ts\n            \n            class\n            UpdateProductDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/product/entities/product.entity.ts\n            \n            class\n            Product\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/product/product.controller.ts\n            \n            controller\n            ProductController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/product/product.service.ts\n            \n            injectable\n            ProductService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/table/dto/create-table.dto.ts\n            \n            class\n            CreateTableDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/table/dto/update-table.dto.ts\n            \n            class\n            UpdateTableDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/table/entities/table.entity.ts\n            \n            class\n            Table\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/table/table.controller.ts\n            \n            controller\n            TableController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/table/table.service.ts\n            \n            injectable\n            TableService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/user/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/utils/handle-error.util.ts\n            \n            function\n            handleError\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/jwt : ^8.0.0\n        \n            @nestjs/mapped-types : ^1.0.1\n        \n            @nestjs/passport : ^8.2.1\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/swagger : ^5.2.1\n        \n            @prisma/client : ^3.13.0\n        \n            bcrypt : ^5.0.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            passport : ^0.5.2\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.3.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            handleError   (src/.../handle-error.util.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/utils/handle-error.util.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        handleError\n                        \n                    \n                \n            \n            \n                \nhandleError(error: Error)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            Error\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nPizza Fresh Server\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TableModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_OrderModule\n\n\n\ncluster_OrderModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_ProductModule\n\n\n\ncluster_ProductModule_providers\n\n\n\ncluster_TableModule\n\n\n\ncluster_TableModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nOrderModule\n\nOrderModule\n\nAppModule -->\n\nOrderModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\nOrderModule -->\n\nPrismaModule->OrderModule\n\n\n\n\n\nProductModule\n\nProductModule\n\nProductModule -->\n\nPrismaModule->ProductModule\n\n\n\n\n\nTableModule\n\nTableModule\n\nTableModule -->\n\nPrismaModule->TableModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nPrismaModule->UserModule\n\n\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\nAppModule -->\n\nProductModule->AppModule\n\n\n\nAppModule -->\n\nTableModule->AppModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nOrderService\n\nOrderService\n\nOrderModule -->\n\nOrderService->OrderModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\nProductService\n\nProductService\n\nProductModule -->\n\nProductService->ProductModule\n\n\n\n\n\nTableService\n\nTableService\n\nTableModule -->\n\nTableService->TableModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    14 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nExample of TODO.md\nThis is an example of TODO.md\nView the raw content of this file to understand the format.\nTodo\n\n Work on the website ~3d #feat @john 2020-03-20\n Fix the homepage ~1d #bug @jane\n Sub-task or description\n\n\n\nIn Progress\n\n Work on Github Repo [JIRA-345]\n\nDone ✓\n\n Create my first TODO.md\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            LoggedUser   (src/.../logged-user.decorator.ts)\n                        \n                        \n                            prisma   (src/.../seed.ts)\n                        \n                        \n                            product   (src/.../02-product.ts)\n                        \n                        \n                            products   (src/.../02-product.ts)\n                        \n                        \n                            seeds   (src/.../seed.ts)\n                        \n                        \n                            table   (src/.../03-table.ts)\n                        \n                        \n                            tables   (src/.../03-table.ts)\n                        \n                        \n                            user   (src/.../01-user.ts)\n                        \n                        \n                            users   (src/.../01-user.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/logged-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LoggedUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator((_, ctx: ExecutionContext) => {\n  const request = ctx.switchToHttp().getRequest();\n  const user = request.user;\n\n  delete user.password;\n\n  return user;\n})\n                    \n                \n\n\n        \n    \n\n    src/prisma/seed.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        prisma\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new PrismaClient()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seeds\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.entries(seed)\n                    \n                \n\n\n        \n    \n\n    src/prisma/seed/02-product.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        product\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (prisma: PrismaClient) => {\n  for (const obj of Object.values(products)) {\n    await prisma.product.upsert({\n      where: { name: obj.name },\n      update: {},\n      create: {\n        ...obj,\n      },\n    });\n  }\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Prisma.ProductCreateInput[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    name: 'Pizza de Mussarela',\n    description:\n      'Queijo mussarela fino do fino, massa fina e borda recheada de catupiry',\n    price: 12.34,\n    image: 'https://i.imgur.com/hNE75Iw.png',\n  },\n  {\n    name: 'Pizza de Calabresa',\n    description:\n      'Queijo mussarela fino do fino, massa fina e borda recheada de catupiry',\n    price: 12.34,\n    image: 'https://i.imgur.com/hNE75Iw.png',\n  },\n  {\n    name: 'Pizza de Frango com Catupiry',\n    description:\n      'Queijo mussarela fino do fino, massa fina e borda recheada de catupiry',\n    price: 12.34,\n    image: 'https://i.imgur.com/hNE75Iw.png',\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/prisma/seed/03-table.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        table\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (prisma: PrismaClient) => {\n  for (const obj of Object.values(tables)) {\n    await prisma.table.upsert({\n      where: { number: obj.number },\n      update: {},\n      create: {\n        ...obj,\n      },\n    });\n  }\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tables\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Prisma.TableCreateInput[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    number: 1,\n  },\n  {\n    number: 2,\n  },\n  {\n    number: 3,\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/prisma/seed/01-user.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (prisma: PrismaClient) => {\n  for (const obj of Object.values(users)) {\n    await prisma.user.upsert({\n      where: { nickname: obj.nickname },\n      update: {},\n      create: {\n        ...obj,\n        password: await bcrypt.hash(obj.password, 10),\n      },\n    });\n  }\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Prisma.UserCreateInput[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    nickname: 'paulosalvatore',\n    name: 'Paulo Salvatore',\n    password: 'Abcd@1234',\n    image: 'https://avatars.githubusercontent.com/u/7906171',\n  },\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
